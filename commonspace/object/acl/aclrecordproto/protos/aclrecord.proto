syntax = "proto3";
package aclrecord;
option go_package = "commonspace/object/acl/aclrecordproto";

message RawAclRecord {
    bytes payload = 1;
    bytes signature = 2;
    bytes acceptorIdentity = 3;
    bytes acceptorSignature = 4;
}

message RawAclRecordWithId {
    bytes payload = 1;
    string id = 2;
}

message AclRecord {
    string prevId = 1;
    bytes identity = 2;
    bytes data = 3;
    string readKeyId = 4;
    int64 timestamp = 5;
}

message AclRoot {
    bytes identity = 1;
    string spaceId = 2;
    bytes encryptedReadKey = 3;
    bytes derivationParams = 4;
    int64 timestamp = 5;
}

message AclContentValue {
    oneof value {
        AclUserAdd userAdd = 1;
        AclUserRemove userRemove = 2;
        AclUserPermissionChange userPermissionChange = 3;
        AclUserInvite userInvite = 4;
        AclUserJoin userJoin = 5;
    }
}

message AclData {
    repeated AclContentValue aclContent = 1;
}

message AclState {
    repeated string readKeyIds = 1;
    repeated AclUserState userStates = 2;
    map<string, AclUserInvite> invites = 3;
}

message AclUserState {
    bytes identity = 1;
    AclUserPermissions permissions = 2;
}

message AclUserAdd {
    bytes identity = 1;
    repeated bytes encryptedReadKeys = 2;
    AclUserPermissions permissions = 3;
}

message AclUserInvite {
    bytes acceptPublicKey = 1;
    repeated bytes encryptedReadKeys = 2;
    AclUserPermissions permissions = 3;
}

message AclUserJoin {
    bytes identity = 1;
    bytes acceptSignature = 2;
    bytes acceptPubKey = 3;
    repeated bytes encryptedReadKeys = 4;
}

message AclUserRemove {
    bytes identity = 1;
    repeated AclReadKeyReplace readKeyReplaces = 2;
}

message AclReadKeyReplace {
    bytes identity = 1;
    bytes encryptedReadKey = 2;
}

message AclUserPermissionChange {
    bytes identity = 1;
    AclUserPermissions permissions = 2;
}

enum AclUserPermissions {
    Admin = 0;
    Writer = 1;
    Reader = 2;
}

message AclSyncMessage {
    AclSyncContentValue content = 1;
}

// AclSyncContentValue provides different types for acl sync
message AclSyncContentValue {
    oneof value {
        AclAddRecords addRecords = 1;
    }
}

message AclAddRecords {
    repeated RawAclRecordWithId records = 1;
}