// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: commonspace/spacesyncproto/protos/spacesync.proto

package spacesyncproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCodes int32

const (
	ErrCodes_Unexpected              ErrCodes = 0
	ErrCodes_SpaceMissing            ErrCodes = 1
	ErrCodes_SpaceExists             ErrCodes = 2
	ErrCodes_SpaceNotInCache         ErrCodes = 3
	ErrCodes_SpaceIsDeleted          ErrCodes = 4
	ErrCodes_PeerIsNotResponsible    ErrCodes = 5
	ErrCodes_ReceiptIsInvalid        ErrCodes = 6
	ErrCodes_InvalidPayload          ErrCodes = 7
	ErrCodes_DuplicateRequest        ErrCodes = 8
	ErrCodes_TooManyRequestsFromPeer ErrCodes = 9
	ErrCodes_ErrorOffset             ErrCodes = 100
)

// Enum value maps for ErrCodes.
var (
	ErrCodes_name = map[int32]string{
		0:   "Unexpected",
		1:   "SpaceMissing",
		2:   "SpaceExists",
		3:   "SpaceNotInCache",
		4:   "SpaceIsDeleted",
		5:   "PeerIsNotResponsible",
		6:   "ReceiptIsInvalid",
		7:   "InvalidPayload",
		8:   "DuplicateRequest",
		9:   "TooManyRequestsFromPeer",
		100: "ErrorOffset",
	}
	ErrCodes_value = map[string]int32{
		"Unexpected":              0,
		"SpaceMissing":            1,
		"SpaceExists":             2,
		"SpaceNotInCache":         3,
		"SpaceIsDeleted":          4,
		"PeerIsNotResponsible":    5,
		"ReceiptIsInvalid":        6,
		"InvalidPayload":          7,
		"DuplicateRequest":        8,
		"TooManyRequestsFromPeer": 9,
		"ErrorOffset":             100,
	}
)

func (x ErrCodes) Enum() *ErrCodes {
	p := new(ErrCodes)
	*p = x
	return p
}

func (x ErrCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[0].Descriptor()
}

func (ErrCodes) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[0]
}

func (x ErrCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCodes.Descriptor instead.
func (ErrCodes) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{0}
}

// SpaceSubscription contains in ObjectSyncMessage.Payload and indicates that we need to subscribe or unsubscribe the current stream to this space
type SpaceSubscriptionAction int32

const (
	SpaceSubscriptionAction_Subscribe   SpaceSubscriptionAction = 0
	SpaceSubscriptionAction_Unsubscribe SpaceSubscriptionAction = 1
)

// Enum value maps for SpaceSubscriptionAction.
var (
	SpaceSubscriptionAction_name = map[int32]string{
		0: "Subscribe",
		1: "Unsubscribe",
	}
	SpaceSubscriptionAction_value = map[string]int32{
		"Subscribe":   0,
		"Unsubscribe": 1,
	}
)

func (x SpaceSubscriptionAction) Enum() *SpaceSubscriptionAction {
	p := new(SpaceSubscriptionAction)
	*p = x
	return p
}

func (x SpaceSubscriptionAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceSubscriptionAction) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[1].Descriptor()
}

func (SpaceSubscriptionAction) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[1]
}

func (x SpaceSubscriptionAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceSubscriptionAction.Descriptor instead.
func (SpaceSubscriptionAction) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{1}
}

// DiffType is a type of diff
type DiffType int32

const (
	DiffType_Initial DiffType = 0
	DiffType_V1      DiffType = 1
	DiffType_V2      DiffType = 2
	DiffType_V3      DiffType = 3
)

// Enum value maps for DiffType.
var (
	DiffType_name = map[int32]string{
		0: "Initial",
		1: "V1",
		2: "V2",
		3: "V3",
	}
	DiffType_value = map[string]int32{
		"Initial": 0,
		"V1":      1,
		"V2":      2,
		"V3":      3,
	}
)

func (x DiffType) Enum() *DiffType {
	p := new(DiffType)
	*p = x
	return p
}

func (x DiffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiffType) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[2].Descriptor()
}

func (DiffType) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[2]
}

func (x DiffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiffType.Descriptor instead.
func (DiffType) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{2}
}

// ObjectType is a type of object
type ObjectType int32

const (
	ObjectType_Tree     ObjectType = 0
	ObjectType_Acl      ObjectType = 1
	ObjectType_KeyValue ObjectType = 2
)

// Enum value maps for ObjectType.
var (
	ObjectType_name = map[int32]string{
		0: "Tree",
		1: "Acl",
		2: "KeyValue",
	}
	ObjectType_value = map[string]int32{
		"Tree":     0,
		"Acl":      1,
		"KeyValue": 2,
	}
)

func (x ObjectType) Enum() *ObjectType {
	p := new(ObjectType)
	*p = x
	return p
}

func (x ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[3].Descriptor()
}

func (ObjectType) Type() protoreflect.EnumType {
	return &file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes[3]
}

func (x ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectType.Descriptor instead.
func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{3}
}

// HeadSyncRange presenting a request for one range
type HeadSyncRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          uint64                 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            uint64                 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Elements      bool                   `protobuf:"varint,4,opt,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncRange) Reset() {
	*x = HeadSyncRange{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncRange) ProtoMessage() {}

func (x *HeadSyncRange) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncRange.ProtoReflect.Descriptor instead.
func (*HeadSyncRange) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{0}
}

func (x *HeadSyncRange) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *HeadSyncRange) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *HeadSyncRange) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *HeadSyncRange) GetElements() bool {
	if x != nil {
		return x.Elements
	}
	return false
}

// HeadSyncResult presenting a response for one range
type HeadSyncResult struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Hash          []byte                   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Elements      []*HeadSyncResultElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	Count         uint32                   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResult) Reset() {
	*x = HeadSyncResult{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResult) ProtoMessage() {}

func (x *HeadSyncResult) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResult.ProtoReflect.Descriptor instead.
func (*HeadSyncResult) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{1}
}

func (x *HeadSyncResult) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *HeadSyncResult) GetElements() []*HeadSyncResultElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *HeadSyncResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// HeadSyncResultElement presenting state of one object
type HeadSyncResultElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Head          string                 `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResultElement) Reset() {
	*x = HeadSyncResultElement{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResultElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResultElement) ProtoMessage() {}

func (x *HeadSyncResultElement) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResultElement.ProtoReflect.Descriptor instead.
func (*HeadSyncResultElement) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{2}
}

func (x *HeadSyncResultElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeadSyncResultElement) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

// HeadSyncRequest is a request for HeadSync
type HeadSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Ranges        []*HeadSyncRange       `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	DiffType      DiffType               `protobuf:"varint,3,opt,name=diffType,proto3,enum=spacesync.DiffType" json:"diffType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncRequest) Reset() {
	*x = HeadSyncRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncRequest) ProtoMessage() {}

func (x *HeadSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncRequest.ProtoReflect.Descriptor instead.
func (*HeadSyncRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{3}
}

func (x *HeadSyncRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *HeadSyncRequest) GetRanges() []*HeadSyncRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *HeadSyncRequest) GetDiffType() DiffType {
	if x != nil {
		return x.DiffType
	}
	return DiffType_Initial
}

// HeadSyncResponse is a response for HeadSync
type HeadSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*HeadSyncResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	DiffType      DiffType               `protobuf:"varint,2,opt,name=diffType,proto3,enum=spacesync.DiffType" json:"diffType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadSyncResponse) Reset() {
	*x = HeadSyncResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadSyncResponse) ProtoMessage() {}

func (x *HeadSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadSyncResponse.ProtoReflect.Descriptor instead.
func (*HeadSyncResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{4}
}

func (x *HeadSyncResponse) GetResults() []*HeadSyncResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *HeadSyncResponse) GetDiffType() DiffType {
	if x != nil {
		return x.DiffType
	}
	return DiffType_Initial
}

// ObjectSyncMessage is a message sent on object sync
type ObjectSyncMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	ReplyId       string                 `protobuf:"bytes,3,opt,name=replyId,proto3" json:"replyId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	ObjectId      string                 `protobuf:"bytes,5,opt,name=objectId,proto3" json:"objectId,omitempty"`
	ObjectType    ObjectType             `protobuf:"varint,6,opt,name=objectType,proto3,enum=spacesync.ObjectType" json:"objectType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectSyncMessage) Reset() {
	*x = ObjectSyncMessage{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectSyncMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSyncMessage) ProtoMessage() {}

func (x *ObjectSyncMessage) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSyncMessage.ProtoReflect.Descriptor instead.
func (*ObjectSyncMessage) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{5}
}

func (x *ObjectSyncMessage) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ObjectSyncMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ObjectSyncMessage) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *ObjectSyncMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ObjectSyncMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ObjectSyncMessage) GetObjectType() ObjectType {
	if x != nil {
		return x.ObjectType
	}
	return ObjectType_Tree
}

// SpacePushRequest is a request to add space on a node containing only one acl record
type SpacePushRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *SpacePayload          `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Credential    []byte                 `protobuf:"bytes,2,opt,name=Credential,proto3" json:"Credential,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePushRequest) Reset() {
	*x = SpacePushRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePushRequest) ProtoMessage() {}

func (x *SpacePushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePushRequest.ProtoReflect.Descriptor instead.
func (*SpacePushRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{6}
}

func (x *SpacePushRequest) GetPayload() *SpacePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SpacePushRequest) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

// SpacePushResponse is an empty response
type SpacePushResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePushResponse) Reset() {
	*x = SpacePushResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePushResponse) ProtoMessage() {}

func (x *SpacePushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePushResponse.ProtoReflect.Descriptor instead.
func (*SpacePushResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{7}
}

// SpacePullRequest is a request to request a space on a node that doesn't have it
type SpacePullRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePullRequest) Reset() {
	*x = SpacePullRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePullRequest) ProtoMessage() {}

func (x *SpacePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePullRequest.ProtoReflect.Descriptor instead.
func (*SpacePullRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{8}
}

func (x *SpacePullRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpacePullResponse is a response with header and acl root
type SpacePullResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *SpacePayload          `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	AclRecords    []*AclRecord           `protobuf:"bytes,2,rep,name=aclRecords,proto3" json:"aclRecords,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpacePullResponse) Reset() {
	*x = SpacePullResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePullResponse) ProtoMessage() {}

func (x *SpacePullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePullResponse.ProtoReflect.Descriptor instead.
func (*SpacePullResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{9}
}

func (x *SpacePullResponse) GetPayload() *SpacePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SpacePullResponse) GetAclRecords() []*AclRecord {
	if x != nil {
		return x.AclRecords
	}
	return nil
}

type AclRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AclPayload    []byte                 `protobuf:"bytes,1,opt,name=aclPayload,proto3" json:"aclPayload,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclRecord) Reset() {
	*x = AclRecord{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclRecord) ProtoMessage() {}

func (x *AclRecord) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclRecord.ProtoReflect.Descriptor instead.
func (*AclRecord) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{10}
}

func (x *AclRecord) GetAclPayload() []byte {
	if x != nil {
		return x.AclPayload
	}
	return nil
}

func (x *AclRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpacePayload is a payload for pushing a space
type SpacePayload struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SpaceHeader            *RawSpaceHeaderWithId  `protobuf:"bytes,1,opt,name=spaceHeader,proto3" json:"spaceHeader,omitempty"`
	AclPayload             []byte                 `protobuf:"bytes,2,opt,name=aclPayload,proto3" json:"aclPayload,omitempty"`
	AclPayloadId           string                 `protobuf:"bytes,3,opt,name=aclPayloadId,proto3" json:"aclPayloadId,omitempty"`
	SpaceSettingsPayload   []byte                 `protobuf:"bytes,4,opt,name=spaceSettingsPayload,proto3" json:"spaceSettingsPayload,omitempty"`
	SpaceSettingsPayloadId string                 `protobuf:"bytes,5,opt,name=spaceSettingsPayloadId,proto3" json:"spaceSettingsPayloadId,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SpacePayload) Reset() {
	*x = SpacePayload{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpacePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpacePayload) ProtoMessage() {}

func (x *SpacePayload) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpacePayload.ProtoReflect.Descriptor instead.
func (*SpacePayload) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{11}
}

func (x *SpacePayload) GetSpaceHeader() *RawSpaceHeaderWithId {
	if x != nil {
		return x.SpaceHeader
	}
	return nil
}

func (x *SpacePayload) GetAclPayload() []byte {
	if x != nil {
		return x.AclPayload
	}
	return nil
}

func (x *SpacePayload) GetAclPayloadId() string {
	if x != nil {
		return x.AclPayloadId
	}
	return ""
}

func (x *SpacePayload) GetSpaceSettingsPayload() []byte {
	if x != nil {
		return x.SpaceSettingsPayload
	}
	return nil
}

func (x *SpacePayload) GetSpaceSettingsPayloadId() string {
	if x != nil {
		return x.SpaceSettingsPayloadId
	}
	return ""
}

// SpaceHeader is a header for a space
type SpaceHeader struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Identity           []byte                 `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Timestamp          int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SpaceType          string                 `protobuf:"bytes,3,opt,name=spaceType,proto3" json:"spaceType,omitempty"`
	ReplicationKey     uint64                 `protobuf:"varint,4,opt,name=replicationKey,proto3" json:"replicationKey,omitempty"`
	Seed               []byte                 `protobuf:"bytes,5,opt,name=seed,proto3" json:"seed,omitempty"`
	SpaceHeaderPayload []byte                 `protobuf:"bytes,6,opt,name=spaceHeaderPayload,proto3" json:"spaceHeaderPayload,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SpaceHeader) Reset() {
	*x = SpaceHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceHeader) ProtoMessage() {}

func (x *SpaceHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceHeader.ProtoReflect.Descriptor instead.
func (*SpaceHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{12}
}

func (x *SpaceHeader) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *SpaceHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SpaceHeader) GetSpaceType() string {
	if x != nil {
		return x.SpaceType
	}
	return ""
}

func (x *SpaceHeader) GetReplicationKey() uint64 {
	if x != nil {
		return x.ReplicationKey
	}
	return 0
}

func (x *SpaceHeader) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *SpaceHeader) GetSpaceHeaderPayload() []byte {
	if x != nil {
		return x.SpaceHeaderPayload
	}
	return nil
}

// RawSpaceHeader is raw header for SpaceHeader
type RawSpaceHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceHeader   []byte                 `protobuf:"bytes,1,opt,name=spaceHeader,proto3" json:"spaceHeader,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawSpaceHeader) Reset() {
	*x = RawSpaceHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSpaceHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSpaceHeader) ProtoMessage() {}

func (x *RawSpaceHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSpaceHeader.ProtoReflect.Descriptor instead.
func (*RawSpaceHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{13}
}

func (x *RawSpaceHeader) GetSpaceHeader() []byte {
	if x != nil {
		return x.SpaceHeader
	}
	return nil
}

func (x *RawSpaceHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// RawSpaceHeaderWithId is a marshalled RawSpaceHeader with its content id
type RawSpaceHeaderWithId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RawHeader     []byte                 `protobuf:"bytes,1,opt,name=rawHeader,proto3" json:"rawHeader,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawSpaceHeaderWithId) Reset() {
	*x = RawSpaceHeaderWithId{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSpaceHeaderWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSpaceHeaderWithId) ProtoMessage() {}

func (x *RawSpaceHeaderWithId) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSpaceHeaderWithId.ProtoReflect.Descriptor instead.
func (*RawSpaceHeaderWithId) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{14}
}

func (x *RawSpaceHeaderWithId) GetRawHeader() []byte {
	if x != nil {
		return x.RawHeader
	}
	return nil
}

func (x *RawSpaceHeaderWithId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SpaceSettingsContent is a payload for a space settings object
type SpaceSettingsContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*SpaceSettingsContent_ObjectDelete
	//	*SpaceSettingsContent_SpaceDelete
	Value         isSpaceSettingsContent_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSettingsContent) Reset() {
	*x = SpaceSettingsContent{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSettingsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSettingsContent) ProtoMessage() {}

func (x *SpaceSettingsContent) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSettingsContent.ProtoReflect.Descriptor instead.
func (*SpaceSettingsContent) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{15}
}

func (x *SpaceSettingsContent) GetValue() isSpaceSettingsContent_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SpaceSettingsContent) GetObjectDelete() *ObjectDelete {
	if x != nil {
		if x, ok := x.Value.(*SpaceSettingsContent_ObjectDelete); ok {
			return x.ObjectDelete
		}
	}
	return nil
}

func (x *SpaceSettingsContent) GetSpaceDelete() *SpaceDelete {
	if x != nil {
		if x, ok := x.Value.(*SpaceSettingsContent_SpaceDelete); ok {
			return x.SpaceDelete
		}
	}
	return nil
}

type isSpaceSettingsContent_Value interface {
	isSpaceSettingsContent_Value()
}

type SpaceSettingsContent_ObjectDelete struct {
	ObjectDelete *ObjectDelete `protobuf:"bytes,1,opt,name=objectDelete,proto3,oneof"`
}

type SpaceSettingsContent_SpaceDelete struct {
	SpaceDelete *SpaceDelete `protobuf:"bytes,2,opt,name=spaceDelete,proto3,oneof"`
}

func (*SpaceSettingsContent_ObjectDelete) isSpaceSettingsContent_Value() {}

func (*SpaceSettingsContent_SpaceDelete) isSpaceSettingsContent_Value() {}

// ObjectDelete is a message containing an object id which should be deleted
type ObjectDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectDelete) Reset() {
	*x = ObjectDelete{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDelete) ProtoMessage() {}

func (x *ObjectDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDelete.ProtoReflect.Descriptor instead.
func (*ObjectDelete) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{16}
}

func (x *ObjectDelete) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// StoreHeader is a header for a store
type StoreHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	StorageName   string                 `protobuf:"bytes,2,opt,name=storageName,proto3" json:"storageName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreHeader) Reset() {
	*x = StoreHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreHeader) ProtoMessage() {}

func (x *StoreHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreHeader.ProtoReflect.Descriptor instead.
func (*StoreHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{17}
}

func (x *StoreHeader) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StoreHeader) GetStorageName() string {
	if x != nil {
		return x.StorageName
	}
	return ""
}

// SpaceDelete is a message containing deleter peer id
type SpaceDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeleterPeerId string                 `protobuf:"bytes,1,opt,name=deleterPeerId,proto3" json:"deleterPeerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceDelete) Reset() {
	*x = SpaceDelete{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceDelete) ProtoMessage() {}

func (x *SpaceDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceDelete.ProtoReflect.Descriptor instead.
func (*SpaceDelete) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{18}
}

func (x *SpaceDelete) GetDeleterPeerId() string {
	if x != nil {
		return x.DeleterPeerId
	}
	return ""
}

// SpaceSettingsSnapshot contains all the deleted ids in a snapshot
type SpaceSettingsSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedIds    []string               `protobuf:"bytes,1,rep,name=deletedIds,proto3" json:"deletedIds,omitempty"`
	DeleterPeerId string                 `protobuf:"bytes,2,opt,name=deleterPeerId,proto3" json:"deleterPeerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSettingsSnapshot) Reset() {
	*x = SpaceSettingsSnapshot{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSettingsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSettingsSnapshot) ProtoMessage() {}

func (x *SpaceSettingsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSettingsSnapshot.ProtoReflect.Descriptor instead.
func (*SpaceSettingsSnapshot) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{19}
}

func (x *SpaceSettingsSnapshot) GetDeletedIds() []string {
	if x != nil {
		return x.DeletedIds
	}
	return nil
}

func (x *SpaceSettingsSnapshot) GetDeleterPeerId() string {
	if x != nil {
		return x.DeleterPeerId
	}
	return ""
}

// SettingsData contains ObjectTree change payload
type SettingsData struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Content       []*SpaceSettingsContent `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	Snapshot      *SpaceSettingsSnapshot  `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsData) Reset() {
	*x = SettingsData{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsData) ProtoMessage() {}

func (x *SettingsData) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsData.ProtoReflect.Descriptor instead.
func (*SettingsData) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{20}
}

func (x *SettingsData) GetContent() []*SpaceSettingsContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SettingsData) GetSnapshot() *SpaceSettingsSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type SpaceSubscription struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	SpaceIds      []string                `protobuf:"bytes,1,rep,name=spaceIds,proto3" json:"spaceIds,omitempty"`
	Action        SpaceSubscriptionAction `protobuf:"varint,2,opt,name=action,proto3,enum=spacesync.SpaceSubscriptionAction" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceSubscription) Reset() {
	*x = SpaceSubscription{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSubscription) ProtoMessage() {}

func (x *SpaceSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSubscription.ProtoReflect.Descriptor instead.
func (*SpaceSubscription) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{21}
}

func (x *SpaceSubscription) GetSpaceIds() []string {
	if x != nil {
		return x.SpaceIds
	}
	return nil
}

func (x *SpaceSubscription) GetAction() SpaceSubscriptionAction {
	if x != nil {
		return x.Action
	}
	return SpaceSubscriptionAction_Subscribe
}

// AclAddRecordRequest contains marshaled consensusproto.RawRecord
type AclAddRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclAddRecordRequest) Reset() {
	*x = AclAddRecordRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclAddRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclAddRecordRequest) ProtoMessage() {}

func (x *AclAddRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclAddRecordRequest.ProtoReflect.Descriptor instead.
func (*AclAddRecordRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{22}
}

func (x *AclAddRecordRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AclAddRecordRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// AclAddRecordResponse contains created record id and marshaled consensusproto.RawRecord
type AclAddRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclAddRecordResponse) Reset() {
	*x = AclAddRecordResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclAddRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclAddRecordResponse) ProtoMessage() {}

func (x *AclAddRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclAddRecordResponse.ProtoReflect.Descriptor instead.
func (*AclAddRecordResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{23}
}

func (x *AclAddRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *AclAddRecordResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// AclGetRecordsRequest can optionally contain the last known aclHead, the server will return only new records or an empty list if there are no new records.
// If aclHead is not provided the whole list will be returned.
type AclGetRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	AclHead       string                 `protobuf:"bytes,2,opt,name=aclHead,proto3" json:"aclHead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclGetRecordsRequest) Reset() {
	*x = AclGetRecordsRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclGetRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclGetRecordsRequest) ProtoMessage() {}

func (x *AclGetRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclGetRecordsRequest.ProtoReflect.Descriptor instead.
func (*AclGetRecordsRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{24}
}

func (x *AclGetRecordsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *AclGetRecordsRequest) GetAclHead() string {
	if x != nil {
		return x.AclHead
	}
	return ""
}

// AclGetRecordsResponse contains list of marshaled consensusproto.RawRecordWithId
type AclGetRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       [][]byte               `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclGetRecordsResponse) Reset() {
	*x = AclGetRecordsResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclGetRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclGetRecordsResponse) ProtoMessage() {}

func (x *AclGetRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclGetRecordsResponse.ProtoReflect.Descriptor instead.
func (*AclGetRecordsResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{25}
}

func (x *AclGetRecordsResponse) GetRecords() [][]byte {
	if x != nil {
		return x.Records
	}
	return nil
}

type StoreDiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Ranges        []*HeadSyncRange       `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreDiffRequest) Reset() {
	*x = StoreDiffRequest{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDiffRequest) ProtoMessage() {}

func (x *StoreDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDiffRequest.ProtoReflect.Descriptor instead.
func (*StoreDiffRequest) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{26}
}

func (x *StoreDiffRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StoreDiffRequest) GetRanges() []*HeadSyncRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type StoreDiffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*HeadSyncResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreDiffResponse) Reset() {
	*x = StoreDiffResponse{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDiffResponse) ProtoMessage() {}

func (x *StoreDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDiffResponse.ProtoReflect.Descriptor instead.
func (*StoreDiffResponse) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{27}
}

func (x *StoreDiffResponse) GetResults() []*HeadSyncResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type StoreKeyValue struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	KeyPeerId         string                 `protobuf:"bytes,1,opt,name=keyPeerId,proto3" json:"keyPeerId,omitempty"`
	Value             []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	IdentitySignature []byte                 `protobuf:"bytes,3,opt,name=identitySignature,proto3" json:"identitySignature,omitempty"`
	PeerSignature     []byte                 `protobuf:"bytes,4,opt,name=peerSignature,proto3" json:"peerSignature,omitempty"`
	SpaceId           string                 `protobuf:"bytes,5,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StoreKeyValue) Reset() {
	*x = StoreKeyValue{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKeyValue) ProtoMessage() {}

func (x *StoreKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKeyValue.ProtoReflect.Descriptor instead.
func (*StoreKeyValue) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{28}
}

func (x *StoreKeyValue) GetKeyPeerId() string {
	if x != nil {
		return x.KeyPeerId
	}
	return ""
}

func (x *StoreKeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StoreKeyValue) GetIdentitySignature() []byte {
	if x != nil {
		return x.IdentitySignature
	}
	return nil
}

func (x *StoreKeyValue) GetPeerSignature() []byte {
	if x != nil {
		return x.PeerSignature
	}
	return nil
}

func (x *StoreKeyValue) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type StoreKeyValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyValues     []*StoreKeyValue       `protobuf:"bytes,1,rep,name=keyValues,proto3" json:"keyValues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreKeyValues) Reset() {
	*x = StoreKeyValues{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKeyValues) ProtoMessage() {}

func (x *StoreKeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKeyValues.ProtoReflect.Descriptor instead.
func (*StoreKeyValues) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{29}
}

func (x *StoreKeyValues) GetKeyValues() []*StoreKeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

type StoreKeyInner struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Peer           []byte                 `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Identity       []byte                 `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Value          []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMicro int64                  `protobuf:"varint,4,opt,name=timestampMicro,proto3" json:"timestampMicro,omitempty"`
	AclHeadId      string                 `protobuf:"bytes,5,opt,name=aclHeadId,proto3" json:"aclHeadId,omitempty"`
	Key            string                 `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StoreKeyInner) Reset() {
	*x = StoreKeyInner{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKeyInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKeyInner) ProtoMessage() {}

func (x *StoreKeyInner) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKeyInner.ProtoReflect.Descriptor instead.
func (*StoreKeyInner) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{30}
}

func (x *StoreKeyInner) GetPeer() []byte {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *StoreKeyInner) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *StoreKeyInner) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StoreKeyInner) GetTimestampMicro() int64 {
	if x != nil {
		return x.TimestampMicro
	}
	return 0
}

func (x *StoreKeyInner) GetAclHeadId() string {
	if x != nil {
		return x.AclHeadId
	}
	return ""
}

func (x *StoreKeyInner) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StorageHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	StorageName   string                 `protobuf:"bytes,2,opt,name=storageName,proto3" json:"storageName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageHeader) Reset() {
	*x = StorageHeader{}
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageHeader) ProtoMessage() {}

func (x *StorageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageHeader.ProtoReflect.Descriptor instead.
func (*StorageHeader) Descriptor() ([]byte, []int) {
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP(), []int{31}
}

func (x *StorageHeader) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *StorageHeader) GetStorageName() string {
	if x != nil {
		return x.StorageName
	}
	return ""
}

var File_commonspace_spacesyncproto_protos_spacesync_proto protoreflect.FileDescriptor

const file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc = "" +
	"\n" +
	"1commonspace/spacesyncproto/protos/spacesync.proto\x12\tspacesync\"e\n" +
	"\rHeadSyncRange\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x04R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x04R\x02to\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12\x1a\n" +
	"\belements\x18\x04 \x01(\bR\belements\"x\n" +
	"\x0eHeadSyncResult\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12<\n" +
	"\belements\x18\x02 \x03(\v2 .spacesync.HeadSyncResultElementR\belements\x12\x14\n" +
	"\x05count\x18\x03 \x01(\rR\x05count\";\n" +
	"\x15HeadSyncResultElement\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04head\x18\x02 \x01(\tR\x04head\"\x8e\x01\n" +
	"\x0fHeadSyncRequest\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x120\n" +
	"\x06ranges\x18\x02 \x03(\v2\x18.spacesync.HeadSyncRangeR\x06ranges\x12/\n" +
	"\bdiffType\x18\x03 \x01(\x0e2\x13.spacesync.DiffTypeR\bdiffType\"x\n" +
	"\x10HeadSyncResponse\x123\n" +
	"\aresults\x18\x01 \x03(\v2\x19.spacesync.HeadSyncResultR\aresults\x12/\n" +
	"\bdiffType\x18\x02 \x01(\x0e2\x13.spacesync.DiffTypeR\bdiffType\"\xd2\x01\n" +
	"\x11ObjectSyncMessage\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x12\x1c\n" +
	"\trequestId\x18\x02 \x01(\tR\trequestId\x12\x18\n" +
	"\areplyId\x18\x03 \x01(\tR\areplyId\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x1a\n" +
	"\bobjectId\x18\x05 \x01(\tR\bobjectId\x125\n" +
	"\n" +
	"objectType\x18\x06 \x01(\x0e2\x15.spacesync.ObjectTypeR\n" +
	"objectType\"e\n" +
	"\x10SpacePushRequest\x121\n" +
	"\apayload\x18\x01 \x01(\v2\x17.spacesync.SpacePayloadR\apayload\x12\x1e\n" +
	"\n" +
	"Credential\x18\x02 \x01(\fR\n" +
	"Credential\"\x13\n" +
	"\x11SpacePushResponse\"\"\n" +
	"\x10SpacePullRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"|\n" +
	"\x11SpacePullResponse\x121\n" +
	"\apayload\x18\x01 \x01(\v2\x17.spacesync.SpacePayloadR\apayload\x124\n" +
	"\n" +
	"aclRecords\x18\x02 \x03(\v2\x14.spacesync.AclRecordR\n" +
	"aclRecords\";\n" +
	"\tAclRecord\x12\x1e\n" +
	"\n" +
	"aclPayload\x18\x01 \x01(\fR\n" +
	"aclPayload\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x81\x02\n" +
	"\fSpacePayload\x12A\n" +
	"\vspaceHeader\x18\x01 \x01(\v2\x1f.spacesync.RawSpaceHeaderWithIdR\vspaceHeader\x12\x1e\n" +
	"\n" +
	"aclPayload\x18\x02 \x01(\fR\n" +
	"aclPayload\x12\"\n" +
	"\faclPayloadId\x18\x03 \x01(\tR\faclPayloadId\x122\n" +
	"\x14spaceSettingsPayload\x18\x04 \x01(\fR\x14spaceSettingsPayload\x126\n" +
	"\x16spaceSettingsPayloadId\x18\x05 \x01(\tR\x16spaceSettingsPayloadId\"\xd1\x01\n" +
	"\vSpaceHeader\x12\x1a\n" +
	"\bidentity\x18\x01 \x01(\fR\bidentity\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tspaceType\x18\x03 \x01(\tR\tspaceType\x12&\n" +
	"\x0ereplicationKey\x18\x04 \x01(\x04R\x0ereplicationKey\x12\x12\n" +
	"\x04seed\x18\x05 \x01(\fR\x04seed\x12.\n" +
	"\x12spaceHeaderPayload\x18\x06 \x01(\fR\x12spaceHeaderPayload\"P\n" +
	"\x0eRawSpaceHeader\x12 \n" +
	"\vspaceHeader\x18\x01 \x01(\fR\vspaceHeader\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"D\n" +
	"\x14RawSpaceHeaderWithId\x12\x1c\n" +
	"\trawHeader\x18\x01 \x01(\fR\trawHeader\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x9a\x01\n" +
	"\x14SpaceSettingsContent\x12=\n" +
	"\fobjectDelete\x18\x01 \x01(\v2\x17.spacesync.ObjectDeleteH\x00R\fobjectDelete\x12:\n" +
	"\vspaceDelete\x18\x02 \x01(\v2\x16.spacesync.SpaceDeleteH\x00R\vspaceDeleteB\a\n" +
	"\x05value\"\x1e\n" +
	"\fObjectDelete\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"I\n" +
	"\vStoreHeader\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x12 \n" +
	"\vstorageName\x18\x02 \x01(\tR\vstorageName\"3\n" +
	"\vSpaceDelete\x12$\n" +
	"\rdeleterPeerId\x18\x01 \x01(\tR\rdeleterPeerId\"]\n" +
	"\x15SpaceSettingsSnapshot\x12\x1e\n" +
	"\n" +
	"deletedIds\x18\x01 \x03(\tR\n" +
	"deletedIds\x12$\n" +
	"\rdeleterPeerId\x18\x02 \x01(\tR\rdeleterPeerId\"\x87\x01\n" +
	"\fSettingsData\x129\n" +
	"\acontent\x18\x01 \x03(\v2\x1f.spacesync.SpaceSettingsContentR\acontent\x12<\n" +
	"\bsnapshot\x18\x02 \x01(\v2 .spacesync.SpaceSettingsSnapshotR\bsnapshot\"k\n" +
	"\x11SpaceSubscription\x12\x1a\n" +
	"\bspaceIds\x18\x01 \x03(\tR\bspaceIds\x12:\n" +
	"\x06action\x18\x02 \x01(\x0e2\".spacesync.SpaceSubscriptionActionR\x06action\"I\n" +
	"\x13AclAddRecordRequest\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"L\n" +
	"\x14AclAddRecordResponse\x12\x1a\n" +
	"\brecordId\x18\x01 \x01(\tR\brecordId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"J\n" +
	"\x14AclGetRecordsRequest\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x12\x18\n" +
	"\aaclHead\x18\x02 \x01(\tR\aaclHead\"1\n" +
	"\x15AclGetRecordsResponse\x12\x18\n" +
	"\arecords\x18\x01 \x03(\fR\arecords\"^\n" +
	"\x10StoreDiffRequest\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x120\n" +
	"\x06ranges\x18\x02 \x03(\v2\x18.spacesync.HeadSyncRangeR\x06ranges\"H\n" +
	"\x11StoreDiffResponse\x123\n" +
	"\aresults\x18\x01 \x03(\v2\x19.spacesync.HeadSyncResultR\aresults\"\xb1\x01\n" +
	"\rStoreKeyValue\x12\x1c\n" +
	"\tkeyPeerId\x18\x01 \x01(\tR\tkeyPeerId\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12,\n" +
	"\x11identitySignature\x18\x03 \x01(\fR\x11identitySignature\x12$\n" +
	"\rpeerSignature\x18\x04 \x01(\fR\rpeerSignature\x12\x18\n" +
	"\aspaceId\x18\x05 \x01(\tR\aspaceId\"H\n" +
	"\x0eStoreKeyValues\x126\n" +
	"\tkeyValues\x18\x01 \x03(\v2\x18.spacesync.StoreKeyValueR\tkeyValues\"\xad\x01\n" +
	"\rStoreKeyInner\x12\x12\n" +
	"\x04peer\x18\x01 \x01(\fR\x04peer\x12\x1a\n" +
	"\bidentity\x18\x02 \x01(\fR\bidentity\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\x12&\n" +
	"\x0etimestampMicro\x18\x04 \x01(\x03R\x0etimestampMicro\x12\x1c\n" +
	"\taclHeadId\x18\x05 \x01(\tR\taclHeadId\x12\x10\n" +
	"\x03key\x18\x06 \x01(\tR\x03key\"K\n" +
	"\rStorageHeader\x12\x18\n" +
	"\aspaceId\x18\x01 \x01(\tR\aspaceId\x12 \n" +
	"\vstorageName\x18\x02 \x01(\tR\vstorageName*\xee\x01\n" +
	"\bErrCodes\x12\x0e\n" +
	"\n" +
	"Unexpected\x10\x00\x12\x10\n" +
	"\fSpaceMissing\x10\x01\x12\x0f\n" +
	"\vSpaceExists\x10\x02\x12\x13\n" +
	"\x0fSpaceNotInCache\x10\x03\x12\x12\n" +
	"\x0eSpaceIsDeleted\x10\x04\x12\x18\n" +
	"\x14PeerIsNotResponsible\x10\x05\x12\x14\n" +
	"\x10ReceiptIsInvalid\x10\x06\x12\x12\n" +
	"\x0eInvalidPayload\x10\a\x12\x14\n" +
	"\x10DuplicateRequest\x10\b\x12\x1b\n" +
	"\x17TooManyRequestsFromPeer\x10\t\x12\x0f\n" +
	"\vErrorOffset\x10d*9\n" +
	"\x17SpaceSubscriptionAction\x12\r\n" +
	"\tSubscribe\x10\x00\x12\x0f\n" +
	"\vUnsubscribe\x10\x01*/\n" +
	"\bDiffType\x12\v\n" +
	"\aInitial\x10\x00\x12\x06\n" +
	"\x02V1\x10\x01\x12\x06\n" +
	"\x02V2\x10\x02\x12\x06\n" +
	"\x02V3\x10\x03*-\n" +
	"\n" +
	"ObjectType\x12\b\n" +
	"\x04Tree\x10\x00\x12\a\n" +
	"\x03Acl\x10\x01\x12\f\n" +
	"\bKeyValue\x10\x022\x8d\x06\n" +
	"\tSpaceSync\x12C\n" +
	"\bHeadSync\x12\x1a.spacesync.HeadSyncRequest\x1a\x1b.spacesync.HeadSyncResponse\x12F\n" +
	"\tStoreDiff\x12\x1b.spacesync.StoreDiffRequest\x1a\x1c.spacesync.StoreDiffResponse\x12G\n" +
	"\rStoreElements\x12\x18.spacesync.StoreKeyValue\x1a\x18.spacesync.StoreKeyValue(\x010\x01\x12F\n" +
	"\tSpacePush\x12\x1b.spacesync.SpacePushRequest\x1a\x1c.spacesync.SpacePushResponse\x12F\n" +
	"\tSpacePull\x12\x1b.spacesync.SpacePullRequest\x1a\x1c.spacesync.SpacePullResponse\x12R\n" +
	"\x10ObjectSyncStream\x12\x1c.spacesync.ObjectSyncMessage\x1a\x1c.spacesync.ObjectSyncMessage(\x010\x01\x12H\n" +
	"\n" +
	"ObjectSync\x12\x1c.spacesync.ObjectSyncMessage\x1a\x1c.spacesync.ObjectSyncMessage\x12W\n" +
	"\x17ObjectSyncRequestStream\x12\x1c.spacesync.ObjectSyncMessage\x1a\x1c.spacesync.ObjectSyncMessage0\x01\x12O\n" +
	"\fAclAddRecord\x12\x1e.spacesync.AclAddRecordRequest\x1a\x1f.spacesync.AclAddRecordResponse\x12R\n" +
	"\rAclGetRecords\x12\x1f.spacesync.AclGetRecordsRequest\x1a .spacesync.AclGetRecordsResponseB\x1cZ\x1acommonspace/spacesyncprotob\x06proto3"

var (
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescOnce sync.Once
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData []byte
)

func file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescGZIP() []byte {
	file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescOnce.Do(func() {
		file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc), len(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc)))
	})
	return file_commonspace_spacesyncproto_protos_spacesync_proto_rawDescData
}

var file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes = []any{
	(ErrCodes)(0),                 // 0: spacesync.ErrCodes
	(SpaceSubscriptionAction)(0),  // 1: spacesync.SpaceSubscriptionAction
	(DiffType)(0),                 // 2: spacesync.DiffType
	(ObjectType)(0),               // 3: spacesync.ObjectType
	(*HeadSyncRange)(nil),         // 4: spacesync.HeadSyncRange
	(*HeadSyncResult)(nil),        // 5: spacesync.HeadSyncResult
	(*HeadSyncResultElement)(nil), // 6: spacesync.HeadSyncResultElement
	(*HeadSyncRequest)(nil),       // 7: spacesync.HeadSyncRequest
	(*HeadSyncResponse)(nil),      // 8: spacesync.HeadSyncResponse
	(*ObjectSyncMessage)(nil),     // 9: spacesync.ObjectSyncMessage
	(*SpacePushRequest)(nil),      // 10: spacesync.SpacePushRequest
	(*SpacePushResponse)(nil),     // 11: spacesync.SpacePushResponse
	(*SpacePullRequest)(nil),      // 12: spacesync.SpacePullRequest
	(*SpacePullResponse)(nil),     // 13: spacesync.SpacePullResponse
	(*AclRecord)(nil),             // 14: spacesync.AclRecord
	(*SpacePayload)(nil),          // 15: spacesync.SpacePayload
	(*SpaceHeader)(nil),           // 16: spacesync.SpaceHeader
	(*RawSpaceHeader)(nil),        // 17: spacesync.RawSpaceHeader
	(*RawSpaceHeaderWithId)(nil),  // 18: spacesync.RawSpaceHeaderWithId
	(*SpaceSettingsContent)(nil),  // 19: spacesync.SpaceSettingsContent
	(*ObjectDelete)(nil),          // 20: spacesync.ObjectDelete
	(*StoreHeader)(nil),           // 21: spacesync.StoreHeader
	(*SpaceDelete)(nil),           // 22: spacesync.SpaceDelete
	(*SpaceSettingsSnapshot)(nil), // 23: spacesync.SpaceSettingsSnapshot
	(*SettingsData)(nil),          // 24: spacesync.SettingsData
	(*SpaceSubscription)(nil),     // 25: spacesync.SpaceSubscription
	(*AclAddRecordRequest)(nil),   // 26: spacesync.AclAddRecordRequest
	(*AclAddRecordResponse)(nil),  // 27: spacesync.AclAddRecordResponse
	(*AclGetRecordsRequest)(nil),  // 28: spacesync.AclGetRecordsRequest
	(*AclGetRecordsResponse)(nil), // 29: spacesync.AclGetRecordsResponse
	(*StoreDiffRequest)(nil),      // 30: spacesync.StoreDiffRequest
	(*StoreDiffResponse)(nil),     // 31: spacesync.StoreDiffResponse
	(*StoreKeyValue)(nil),         // 32: spacesync.StoreKeyValue
	(*StoreKeyValues)(nil),        // 33: spacesync.StoreKeyValues
	(*StoreKeyInner)(nil),         // 34: spacesync.StoreKeyInner
	(*StorageHeader)(nil),         // 35: spacesync.StorageHeader
}
var file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs = []int32{
	6,  // 0: spacesync.HeadSyncResult.elements:type_name -> spacesync.HeadSyncResultElement
	4,  // 1: spacesync.HeadSyncRequest.ranges:type_name -> spacesync.HeadSyncRange
	2,  // 2: spacesync.HeadSyncRequest.diffType:type_name -> spacesync.DiffType
	5,  // 3: spacesync.HeadSyncResponse.results:type_name -> spacesync.HeadSyncResult
	2,  // 4: spacesync.HeadSyncResponse.diffType:type_name -> spacesync.DiffType
	3,  // 5: spacesync.ObjectSyncMessage.objectType:type_name -> spacesync.ObjectType
	15, // 6: spacesync.SpacePushRequest.payload:type_name -> spacesync.SpacePayload
	15, // 7: spacesync.SpacePullResponse.payload:type_name -> spacesync.SpacePayload
	14, // 8: spacesync.SpacePullResponse.aclRecords:type_name -> spacesync.AclRecord
	18, // 9: spacesync.SpacePayload.spaceHeader:type_name -> spacesync.RawSpaceHeaderWithId
	20, // 10: spacesync.SpaceSettingsContent.objectDelete:type_name -> spacesync.ObjectDelete
	22, // 11: spacesync.SpaceSettingsContent.spaceDelete:type_name -> spacesync.SpaceDelete
	19, // 12: spacesync.SettingsData.content:type_name -> spacesync.SpaceSettingsContent
	23, // 13: spacesync.SettingsData.snapshot:type_name -> spacesync.SpaceSettingsSnapshot
	1,  // 14: spacesync.SpaceSubscription.action:type_name -> spacesync.SpaceSubscriptionAction
	4,  // 15: spacesync.StoreDiffRequest.ranges:type_name -> spacesync.HeadSyncRange
	5,  // 16: spacesync.StoreDiffResponse.results:type_name -> spacesync.HeadSyncResult
	32, // 17: spacesync.StoreKeyValues.keyValues:type_name -> spacesync.StoreKeyValue
	7,  // 18: spacesync.SpaceSync.HeadSync:input_type -> spacesync.HeadSyncRequest
	30, // 19: spacesync.SpaceSync.StoreDiff:input_type -> spacesync.StoreDiffRequest
	32, // 20: spacesync.SpaceSync.StoreElements:input_type -> spacesync.StoreKeyValue
	10, // 21: spacesync.SpaceSync.SpacePush:input_type -> spacesync.SpacePushRequest
	12, // 22: spacesync.SpaceSync.SpacePull:input_type -> spacesync.SpacePullRequest
	9,  // 23: spacesync.SpaceSync.ObjectSyncStream:input_type -> spacesync.ObjectSyncMessage
	9,  // 24: spacesync.SpaceSync.ObjectSync:input_type -> spacesync.ObjectSyncMessage
	9,  // 25: spacesync.SpaceSync.ObjectSyncRequestStream:input_type -> spacesync.ObjectSyncMessage
	26, // 26: spacesync.SpaceSync.AclAddRecord:input_type -> spacesync.AclAddRecordRequest
	28, // 27: spacesync.SpaceSync.AclGetRecords:input_type -> spacesync.AclGetRecordsRequest
	8,  // 28: spacesync.SpaceSync.HeadSync:output_type -> spacesync.HeadSyncResponse
	31, // 29: spacesync.SpaceSync.StoreDiff:output_type -> spacesync.StoreDiffResponse
	32, // 30: spacesync.SpaceSync.StoreElements:output_type -> spacesync.StoreKeyValue
	11, // 31: spacesync.SpaceSync.SpacePush:output_type -> spacesync.SpacePushResponse
	13, // 32: spacesync.SpaceSync.SpacePull:output_type -> spacesync.SpacePullResponse
	9,  // 33: spacesync.SpaceSync.ObjectSyncStream:output_type -> spacesync.ObjectSyncMessage
	9,  // 34: spacesync.SpaceSync.ObjectSync:output_type -> spacesync.ObjectSyncMessage
	9,  // 35: spacesync.SpaceSync.ObjectSyncRequestStream:output_type -> spacesync.ObjectSyncMessage
	27, // 36: spacesync.SpaceSync.AclAddRecord:output_type -> spacesync.AclAddRecordResponse
	29, // 37: spacesync.SpaceSync.AclGetRecords:output_type -> spacesync.AclGetRecordsResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_commonspace_spacesyncproto_protos_spacesync_proto_init() }
func file_commonspace_spacesyncproto_protos_spacesync_proto_init() {
	if File_commonspace_spacesyncproto_protos_spacesync_proto != nil {
		return
	}
	file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes[15].OneofWrappers = []any{
		(*SpaceSettingsContent_ObjectDelete)(nil),
		(*SpaceSettingsContent_SpaceDelete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc), len(file_commonspace_spacesyncproto_protos_spacesync_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes,
		DependencyIndexes: file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs,
		EnumInfos:         file_commonspace_spacesyncproto_protos_spacesync_proto_enumTypes,
		MessageInfos:      file_commonspace_spacesyncproto_protos_spacesync_proto_msgTypes,
	}.Build()
	File_commonspace_spacesyncproto_protos_spacesync_proto = out.File
	file_commonspace_spacesyncproto_protos_spacesync_proto_goTypes = nil
	file_commonspace_spacesyncproto_protos_spacesync_proto_depIdxs = nil
}
