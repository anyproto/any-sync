// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.34
// source: commonspace/spacesyncproto/protos/spacesync.proto

package spacesyncproto

import (
	context "context"
	errors "errors"
	drpc1 "github.com/planetscale/vtprotobuf/codec/drpc"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto struct{}

func (drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return drpc1.Marshal(msg)
}

func (drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return drpc1.Unmarshal(buf, msg)
}

func (drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return drpc1.JSONMarshal(msg)
}

func (drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return drpc1.JSONUnmarshal(buf, msg)
}

type DRPCSpaceSyncClient interface {
	DRPCConn() drpc.Conn

	HeadSync(ctx context.Context, in *HeadSyncRequest) (*HeadSyncResponse, error)
	StoreDiff(ctx context.Context, in *StoreDiffRequest) (*StoreDiffResponse, error)
	StoreElements(ctx context.Context) (DRPCSpaceSync_StoreElementsClient, error)
	SpacePush(ctx context.Context, in *SpacePushRequest) (*SpacePushResponse, error)
	SpacePull(ctx context.Context, in *SpacePullRequest) (*SpacePullResponse, error)
	ObjectSyncStream(ctx context.Context) (DRPCSpaceSync_ObjectSyncStreamClient, error)
	ObjectSync(ctx context.Context, in *ObjectSyncMessage) (*ObjectSyncMessage, error)
	ObjectSyncRequestStream(ctx context.Context, in *ObjectSyncMessage) (DRPCSpaceSync_ObjectSyncRequestStreamClient, error)
	AclAddRecord(ctx context.Context, in *AclAddRecordRequest) (*AclAddRecordResponse, error)
	AclGetRecords(ctx context.Context, in *AclGetRecordsRequest) (*AclGetRecordsResponse, error)
}

type drpcSpaceSyncClient struct {
	cc drpc.Conn
}

func NewDRPCSpaceSyncClient(cc drpc.Conn) DRPCSpaceSyncClient {
	return &drpcSpaceSyncClient{cc}
}

func (c *drpcSpaceSyncClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcSpaceSyncClient) HeadSync(ctx context.Context, in *HeadSyncRequest) (*HeadSyncResponse, error) {
	out := new(HeadSyncResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/HeadSync", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) StoreDiff(ctx context.Context, in *StoreDiffRequest) (*StoreDiffResponse, error) {
	out := new(StoreDiffResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/StoreDiff", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) StoreElements(ctx context.Context) (DRPCSpaceSync_StoreElementsClient, error) {
	stream, err := c.cc.NewStream(ctx, "/spacesync.SpaceSync/StoreElements", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcSpaceSync_StoreElementsClient{stream}
	return x, nil
}

type DRPCSpaceSync_StoreElementsClient interface {
	drpc.Stream
	Send(*StoreKeyValue) error
	Recv() (*StoreKeyValue, error)
}

type drpcSpaceSync_StoreElementsClient struct {
	drpc.Stream
}

func (x *drpcSpaceSync_StoreElementsClient) GetStream() drpc.Stream {
	return x.Stream
}

func (x *drpcSpaceSync_StoreElementsClient) Send(m *StoreKeyValue) error {
	return x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (x *drpcSpaceSync_StoreElementsClient) Recv() (*StoreKeyValue, error) {
	m := new(StoreKeyValue)
	if err := x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcSpaceSync_StoreElementsClient) RecvMsg(m *StoreKeyValue) error {
	return x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (c *drpcSpaceSyncClient) SpacePush(ctx context.Context, in *SpacePushRequest) (*SpacePushResponse, error) {
	out := new(SpacePushResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/SpacePush", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) SpacePull(ctx context.Context, in *SpacePullRequest) (*SpacePullResponse, error) {
	out := new(SpacePullResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/SpacePull", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) ObjectSyncStream(ctx context.Context) (DRPCSpaceSync_ObjectSyncStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, "/spacesync.SpaceSync/ObjectSyncStream", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcSpaceSync_ObjectSyncStreamClient{stream}
	return x, nil
}

type DRPCSpaceSync_ObjectSyncStreamClient interface {
	drpc.Stream
	Send(*ObjectSyncMessage) error
	Recv() (*ObjectSyncMessage, error)
}

type drpcSpaceSync_ObjectSyncStreamClient struct {
	drpc.Stream
}

func (x *drpcSpaceSync_ObjectSyncStreamClient) GetStream() drpc.Stream {
	return x.Stream
}

func (x *drpcSpaceSync_ObjectSyncStreamClient) Send(m *ObjectSyncMessage) error {
	return x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (x *drpcSpaceSync_ObjectSyncStreamClient) Recv() (*ObjectSyncMessage, error) {
	m := new(ObjectSyncMessage)
	if err := x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcSpaceSync_ObjectSyncStreamClient) RecvMsg(m *ObjectSyncMessage) error {
	return x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (c *drpcSpaceSyncClient) ObjectSync(ctx context.Context, in *ObjectSyncMessage) (*ObjectSyncMessage, error) {
	out := new(ObjectSyncMessage)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/ObjectSync", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) ObjectSyncRequestStream(ctx context.Context, in *ObjectSyncMessage) (DRPCSpaceSync_ObjectSyncRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, "/spacesync.SpaceSync/ObjectSyncRequestStream", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
	if err != nil {
		return nil, err
	}
	x := &drpcSpaceSync_ObjectSyncRequestStreamClient{stream}
	if err := x.MsgSend(in, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	if err := x.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DRPCSpaceSync_ObjectSyncRequestStreamClient interface {
	drpc.Stream
	Recv() (*ObjectSyncMessage, error)
}

type drpcSpaceSync_ObjectSyncRequestStreamClient struct {
	drpc.Stream
}

func (x *drpcSpaceSync_ObjectSyncRequestStreamClient) GetStream() drpc.Stream {
	return x.Stream
}

func (x *drpcSpaceSync_ObjectSyncRequestStreamClient) Recv() (*ObjectSyncMessage, error) {
	m := new(ObjectSyncMessage)
	if err := x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcSpaceSync_ObjectSyncRequestStreamClient) RecvMsg(m *ObjectSyncMessage) error {
	return x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (c *drpcSpaceSyncClient) AclAddRecord(ctx context.Context, in *AclAddRecordRequest) (*AclAddRecordResponse, error) {
	out := new(AclAddRecordResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/AclAddRecord", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcSpaceSyncClient) AclGetRecords(ctx context.Context, in *AclGetRecordsRequest) (*AclGetRecordsResponse, error) {
	out := new(AclGetRecordsResponse)
	err := c.cc.Invoke(ctx, "/spacesync.SpaceSync/AclGetRecords", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCSpaceSyncServer interface {
	HeadSync(context.Context, *HeadSyncRequest) (*HeadSyncResponse, error)
	StoreDiff(context.Context, *StoreDiffRequest) (*StoreDiffResponse, error)
	StoreElements(DRPCSpaceSync_StoreElementsStream) error
	SpacePush(context.Context, *SpacePushRequest) (*SpacePushResponse, error)
	SpacePull(context.Context, *SpacePullRequest) (*SpacePullResponse, error)
	ObjectSyncStream(DRPCSpaceSync_ObjectSyncStreamStream) error
	ObjectSync(context.Context, *ObjectSyncMessage) (*ObjectSyncMessage, error)
	ObjectSyncRequestStream(*ObjectSyncMessage, DRPCSpaceSync_ObjectSyncRequestStreamStream) error
	AclAddRecord(context.Context, *AclAddRecordRequest) (*AclAddRecordResponse, error)
	AclGetRecords(context.Context, *AclGetRecordsRequest) (*AclGetRecordsResponse, error)
}

type DRPCSpaceSyncUnimplementedServer struct{}

func (s *DRPCSpaceSyncUnimplementedServer) HeadSync(context.Context, *HeadSyncRequest) (*HeadSyncResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) StoreDiff(context.Context, *StoreDiffRequest) (*StoreDiffResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) StoreElements(DRPCSpaceSync_StoreElementsStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) SpacePush(context.Context, *SpacePushRequest) (*SpacePushResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) SpacePull(context.Context, *SpacePullRequest) (*SpacePullResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) ObjectSyncStream(DRPCSpaceSync_ObjectSyncStreamStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) ObjectSync(context.Context, *ObjectSyncMessage) (*ObjectSyncMessage, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) ObjectSyncRequestStream(*ObjectSyncMessage, DRPCSpaceSync_ObjectSyncRequestStreamStream) error {
	return drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) AclAddRecord(context.Context, *AclAddRecordRequest) (*AclAddRecordResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

func (s *DRPCSpaceSyncUnimplementedServer) AclGetRecords(context.Context, *AclGetRecordsRequest) (*AclGetRecordsResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCSpaceSyncDescription struct{}

func (DRPCSpaceSyncDescription) NumMethods() int { return 10 }

func (DRPCSpaceSyncDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/spacesync.SpaceSync/HeadSync", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					HeadSync(
						ctx,
						in1.(*HeadSyncRequest),
					)
			}, DRPCSpaceSyncServer.HeadSync, true
	case 1:
		return "/spacesync.SpaceSync/StoreDiff", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					StoreDiff(
						ctx,
						in1.(*StoreDiffRequest),
					)
			}, DRPCSpaceSyncServer.StoreDiff, true
	case 2:
		return "/spacesync.SpaceSync/StoreElements", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCSpaceSyncServer).
					StoreElements(
						&drpcSpaceSync_StoreElementsStream{in1.(drpc.Stream)},
					)
			}, DRPCSpaceSyncServer.StoreElements, true
	case 3:
		return "/spacesync.SpaceSync/SpacePush", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					SpacePush(
						ctx,
						in1.(*SpacePushRequest),
					)
			}, DRPCSpaceSyncServer.SpacePush, true
	case 4:
		return "/spacesync.SpaceSync/SpacePull", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					SpacePull(
						ctx,
						in1.(*SpacePullRequest),
					)
			}, DRPCSpaceSyncServer.SpacePull, true
	case 5:
		return "/spacesync.SpaceSync/ObjectSyncStream", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCSpaceSyncServer).
					ObjectSyncStream(
						&drpcSpaceSync_ObjectSyncStreamStream{in1.(drpc.Stream)},
					)
			}, DRPCSpaceSyncServer.ObjectSyncStream, true
	case 6:
		return "/spacesync.SpaceSync/ObjectSync", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					ObjectSync(
						ctx,
						in1.(*ObjectSyncMessage),
					)
			}, DRPCSpaceSyncServer.ObjectSync, true
	case 7:
		return "/spacesync.SpaceSync/ObjectSyncRequestStream", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return nil, srv.(DRPCSpaceSyncServer).
					ObjectSyncRequestStream(
						in1.(*ObjectSyncMessage),
						&drpcSpaceSync_ObjectSyncRequestStreamStream{in2.(drpc.Stream)},
					)
			}, DRPCSpaceSyncServer.ObjectSyncRequestStream, true
	case 8:
		return "/spacesync.SpaceSync/AclAddRecord", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					AclAddRecord(
						ctx,
						in1.(*AclAddRecordRequest),
					)
			}, DRPCSpaceSyncServer.AclAddRecord, true
	case 9:
		return "/spacesync.SpaceSync/AclGetRecords", drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCSpaceSyncServer).
					AclGetRecords(
						ctx,
						in1.(*AclGetRecordsRequest),
					)
			}, DRPCSpaceSyncServer.AclGetRecords, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterSpaceSync(mux drpc.Mux, impl DRPCSpaceSyncServer) error {
	return mux.Register(impl, DRPCSpaceSyncDescription{})
}

type DRPCSpaceSync_HeadSyncStream interface {
	drpc.Stream
	SendAndClose(*HeadSyncResponse) error
}

type drpcSpaceSync_HeadSyncStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_HeadSyncStream) SendAndClose(m *HeadSyncResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_StoreDiffStream interface {
	drpc.Stream
	SendAndClose(*StoreDiffResponse) error
}

type drpcSpaceSync_StoreDiffStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_StoreDiffStream) SendAndClose(m *StoreDiffResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_StoreElementsStream interface {
	drpc.Stream
	Send(*StoreKeyValue) error
	Recv() (*StoreKeyValue, error)
}

type drpcSpaceSync_StoreElementsStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_StoreElementsStream) Send(m *StoreKeyValue) error {
	return x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (x *drpcSpaceSync_StoreElementsStream) Recv() (*StoreKeyValue, error) {
	m := new(StoreKeyValue)
	if err := x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcSpaceSync_StoreElementsStream) RecvMsg(m *StoreKeyValue) error {
	return x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

type DRPCSpaceSync_SpacePushStream interface {
	drpc.Stream
	SendAndClose(*SpacePushResponse) error
}

type drpcSpaceSync_SpacePushStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_SpacePushStream) SendAndClose(m *SpacePushResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_SpacePullStream interface {
	drpc.Stream
	SendAndClose(*SpacePullResponse) error
}

type drpcSpaceSync_SpacePullStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_SpacePullStream) SendAndClose(m *SpacePullResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_ObjectSyncStreamStream interface {
	drpc.Stream
	Send(*ObjectSyncMessage) error
	Recv() (*ObjectSyncMessage, error)
}

type drpcSpaceSync_ObjectSyncStreamStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_ObjectSyncStreamStream) Send(m *ObjectSyncMessage) error {
	return x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

func (x *drpcSpaceSync_ObjectSyncStreamStream) Recv() (*ObjectSyncMessage, error) {
	m := new(ObjectSyncMessage)
	if err := x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return nil, err
	}
	return m, nil
}

func (x *drpcSpaceSync_ObjectSyncStreamStream) RecvMsg(m *ObjectSyncMessage) error {
	return x.MsgRecv(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

type DRPCSpaceSync_ObjectSyncStream interface {
	drpc.Stream
	SendAndClose(*ObjectSyncMessage) error
}

type drpcSpaceSync_ObjectSyncStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_ObjectSyncStream) SendAndClose(m *ObjectSyncMessage) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_ObjectSyncRequestStreamStream interface {
	drpc.Stream
	Send(*ObjectSyncMessage) error
}

type drpcSpaceSync_ObjectSyncRequestStreamStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_ObjectSyncRequestStreamStream) Send(m *ObjectSyncMessage) error {
	return x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{})
}

type DRPCSpaceSync_AclAddRecordStream interface {
	drpc.Stream
	SendAndClose(*AclAddRecordResponse) error
}

type drpcSpaceSync_AclAddRecordStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_AclAddRecordStream) SendAndClose(m *AclAddRecordResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCSpaceSync_AclGetRecordsStream interface {
	drpc.Stream
	SendAndClose(*AclGetRecordsResponse) error
}

type drpcSpaceSync_AclGetRecordsStream struct {
	drpc.Stream
}

func (x *drpcSpaceSync_AclGetRecordsStream) SendAndClose(m *AclGetRecordsResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_commonspace_spacesyncproto_protos_spacesync_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
