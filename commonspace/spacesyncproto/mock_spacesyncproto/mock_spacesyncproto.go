// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anyproto/any-sync/commonspace/spacesyncproto (interfaces: DRPCSpaceSyncClient)
//
// Generated by this command:
//
//	mockgen -destination mock_spacesyncproto/mock_spacesyncproto.go github.com/anyproto/any-sync/commonspace/spacesyncproto DRPCSpaceSyncClient
//
// Package mock_spacesyncproto is a generated GoMock package.
package mock_spacesyncproto

import (
	context "context"
	reflect "reflect"

	spacesyncproto "github.com/anyproto/any-sync/commonspace/spacesyncproto"
	gomock "go.uber.org/mock/gomock"
	drpc "storj.io/drpc"
)

// MockDRPCSpaceSyncClient is a mock of DRPCSpaceSyncClient interface.
type MockDRPCSpaceSyncClient struct {
	ctrl     *gomock.Controller
	recorder *MockDRPCSpaceSyncClientMockRecorder
}

// MockDRPCSpaceSyncClientMockRecorder is the mock recorder for MockDRPCSpaceSyncClient.
type MockDRPCSpaceSyncClientMockRecorder struct {
	mock *MockDRPCSpaceSyncClient
}

// NewMockDRPCSpaceSyncClient creates a new mock instance.
func NewMockDRPCSpaceSyncClient(ctrl *gomock.Controller) *MockDRPCSpaceSyncClient {
	mock := &MockDRPCSpaceSyncClient{ctrl: ctrl}
	mock.recorder = &MockDRPCSpaceSyncClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDRPCSpaceSyncClient) EXPECT() *MockDRPCSpaceSyncClientMockRecorder {
	return m.recorder
}

// AclAddRecord mocks base method.
func (m *MockDRPCSpaceSyncClient) AclAddRecord(arg0 context.Context, arg1 *spacesyncproto.AclAddRecordRequest) (*spacesyncproto.AclAddRecordResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AclAddRecord", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.AclAddRecordResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AclAddRecord indicates an expected call of AclAddRecord.
func (mr *MockDRPCSpaceSyncClientMockRecorder) AclAddRecord(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AclAddRecord", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).AclAddRecord), arg0, arg1)
}

// AclGetRecords mocks base method.
func (m *MockDRPCSpaceSyncClient) AclGetRecords(arg0 context.Context, arg1 *spacesyncproto.AclGetRecordsRequest) (*spacesyncproto.AclGetRecordsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AclGetRecords", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.AclGetRecordsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AclGetRecords indicates an expected call of AclGetRecords.
func (mr *MockDRPCSpaceSyncClientMockRecorder) AclGetRecords(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AclGetRecords", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).AclGetRecords), arg0, arg1)
}

// DRPCConn mocks base method.
func (m *MockDRPCSpaceSyncClient) DRPCConn() drpc.Conn {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DRPCConn")
	ret0, _ := ret[0].(drpc.Conn)
	return ret0
}

// DRPCConn indicates an expected call of DRPCConn.
func (mr *MockDRPCSpaceSyncClientMockRecorder) DRPCConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DRPCConn", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).DRPCConn))
}

// HeadSync mocks base method.
func (m *MockDRPCSpaceSyncClient) HeadSync(arg0 context.Context, arg1 *spacesyncproto.HeadSyncRequest) (*spacesyncproto.HeadSyncResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HeadSync", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.HeadSyncResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HeadSync indicates an expected call of HeadSync.
func (mr *MockDRPCSpaceSyncClientMockRecorder) HeadSync(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HeadSync", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).HeadSync), arg0, arg1)
}

// ObjectSync mocks base method.
func (m *MockDRPCSpaceSyncClient) ObjectSync(arg0 context.Context, arg1 *spacesyncproto.ObjectSyncMessage) (*spacesyncproto.ObjectSyncMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectSync", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.ObjectSyncMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObjectSync indicates an expected call of ObjectSync.
func (mr *MockDRPCSpaceSyncClientMockRecorder) ObjectSync(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectSync", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).ObjectSync), arg0, arg1)
}

// ObjectSyncRequestStream mocks base method.
func (m *MockDRPCSpaceSyncClient) ObjectSyncRequestStream(arg0 context.Context, arg1 *spacesyncproto.ObjectSyncMessage) (spacesyncproto.DRPCSpaceSync_ObjectSyncRequestStreamClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectSyncRequestStream", arg0, arg1)
	ret0, _ := ret[0].(spacesyncproto.DRPCSpaceSync_ObjectSyncRequestStreamClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObjectSyncRequestStream indicates an expected call of ObjectSyncRequestStream.
func (mr *MockDRPCSpaceSyncClientMockRecorder) ObjectSyncRequestStream(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectSyncRequestStream", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).ObjectSyncRequestStream), arg0, arg1)
}

// ObjectSyncStream mocks base method.
func (m *MockDRPCSpaceSyncClient) ObjectSyncStream(arg0 context.Context) (spacesyncproto.DRPCSpaceSync_ObjectSyncStreamClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectSyncStream", arg0)
	ret0, _ := ret[0].(spacesyncproto.DRPCSpaceSync_ObjectSyncStreamClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObjectSyncStream indicates an expected call of ObjectSyncStream.
func (mr *MockDRPCSpaceSyncClientMockRecorder) ObjectSyncStream(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectSyncStream", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).ObjectSyncStream), arg0)
}

// SpacePull mocks base method.
func (m *MockDRPCSpaceSyncClient) SpacePull(arg0 context.Context, arg1 *spacesyncproto.SpacePullRequest) (*spacesyncproto.SpacePullResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SpacePull", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.SpacePullResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SpacePull indicates an expected call of SpacePull.
func (mr *MockDRPCSpaceSyncClientMockRecorder) SpacePull(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SpacePull", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).SpacePull), arg0, arg1)
}

// SpacePush mocks base method.
func (m *MockDRPCSpaceSyncClient) SpacePush(arg0 context.Context, arg1 *spacesyncproto.SpacePushRequest) (*spacesyncproto.SpacePushResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SpacePush", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.SpacePushResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SpacePush indicates an expected call of SpacePush.
func (mr *MockDRPCSpaceSyncClientMockRecorder) SpacePush(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SpacePush", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).SpacePush), arg0, arg1)
}

// StoreDiff mocks base method.
func (m *MockDRPCSpaceSyncClient) StoreDiff(arg0 context.Context, arg1 *spacesyncproto.StoreDiffRequest) (*spacesyncproto.StoreDiffResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreDiff", arg0, arg1)
	ret0, _ := ret[0].(*spacesyncproto.StoreDiffResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StoreDiff indicates an expected call of StoreDiff.
func (mr *MockDRPCSpaceSyncClientMockRecorder) StoreDiff(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreDiff", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).StoreDiff), arg0, arg1)
}

// StoreElements mocks base method.
func (m *MockDRPCSpaceSyncClient) StoreElements(arg0 context.Context) (spacesyncproto.DRPCSpaceSync_StoreElementsClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreElements", arg0)
	ret0, _ := ret[0].(spacesyncproto.DRPCSpaceSync_StoreElementsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StoreElements indicates an expected call of StoreElements.
func (mr *MockDRPCSpaceSyncClientMockRecorder) StoreElements(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreElements", reflect.TypeOf((*MockDRPCSpaceSyncClient)(nil).StoreElements), arg0)
}
