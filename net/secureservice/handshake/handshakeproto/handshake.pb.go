// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: net/secureservice/handshake/handshakeproto/protos/handshake.proto

package handshakeproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CredentialsType int32

const (
	// SkipVerify using when identity is not required, for example in p2p cases
	CredentialsType_SkipVerify CredentialsType = 0
	// SignedPeerIds using a payload containing PayloadSignedPeerIds message
	CredentialsType_SignedPeerIds CredentialsType = 1
)

// Enum value maps for CredentialsType.
var (
	CredentialsType_name = map[int32]string{
		0: "SkipVerify",
		1: "SignedPeerIds",
	}
	CredentialsType_value = map[string]int32{
		"SkipVerify":    0,
		"SignedPeerIds": 1,
	}
)

func (x CredentialsType) Enum() *CredentialsType {
	p := new(CredentialsType)
	*p = x
	return p
}

func (x CredentialsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialsType) Descriptor() protoreflect.EnumDescriptor {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[0].Descriptor()
}

func (CredentialsType) Type() protoreflect.EnumType {
	return &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[0]
}

func (x CredentialsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CredentialsType.Descriptor instead.
func (CredentialsType) EnumDescriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{0}
}

type Error int32

const (
	Error_Null                 Error = 0
	Error_Unexpected           Error = 1
	Error_InvalidCredentials   Error = 2
	Error_UnexpectedPayload    Error = 3
	Error_SkipVerifyNotAllowed Error = 4
	Error_DeadlineExceeded     Error = 5
	Error_IncompatibleVersion  Error = 6
	Error_IncompatibleProto    Error = 7
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0: "Null",
		1: "Unexpected",
		2: "InvalidCredentials",
		3: "UnexpectedPayload",
		4: "SkipVerifyNotAllowed",
		5: "DeadlineExceeded",
		6: "IncompatibleVersion",
		7: "IncompatibleProto",
	}
	Error_value = map[string]int32{
		"Null":                 0,
		"Unexpected":           1,
		"InvalidCredentials":   2,
		"UnexpectedPayload":    3,
		"SkipVerifyNotAllowed": 4,
		"DeadlineExceeded":     5,
		"IncompatibleVersion":  6,
		"IncompatibleProto":    7,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[1].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[1]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{1}
}

type ProtoType int32

const (
	ProtoType_DRPC ProtoType = 0
)

// Enum value maps for ProtoType.
var (
	ProtoType_name = map[int32]string{
		0: "DRPC",
	}
	ProtoType_value = map[string]int32{
		"DRPC": 0,
	}
)

func (x ProtoType) Enum() *ProtoType {
	p := new(ProtoType)
	*p = x
	return p
}

func (x ProtoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoType) Descriptor() protoreflect.EnumDescriptor {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[2].Descriptor()
}

func (ProtoType) Type() protoreflect.EnumType {
	return &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[2]
}

func (x ProtoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoType.Descriptor instead.
func (ProtoType) EnumDescriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{2}
}

type Encoding int32

const (
	Encoding_None   Encoding = 0
	Encoding_Snappy Encoding = 1
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "None",
		1: "Snappy",
	}
	Encoding_value = map[string]int32{
		"None":   0,
		"Snappy": 1,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[3].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes[3]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{3}
}

type Credentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          CredentialsType        `protobuf:"varint,1,opt,name=type,proto3,enum=anyHandshake.CredentialsType" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Version       uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	ClientVersion string                 `protobuf:"bytes,4,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{0}
}

func (x *Credentials) GetType() CredentialsType {
	if x != nil {
		return x.Type
	}
	return CredentialsType_SkipVerify
}

func (x *Credentials) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Credentials) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Credentials) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type PayloadSignedPeerIds struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// account identity
	Identity []byte `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// sign of (localPeerId + remotePeerId)
	Sign          []byte `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadSignedPeerIds) Reset() {
	*x = PayloadSignedPeerIds{}
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadSignedPeerIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadSignedPeerIds) ProtoMessage() {}

func (x *PayloadSignedPeerIds) ProtoReflect() protoreflect.Message {
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadSignedPeerIds.ProtoReflect.Descriptor instead.
func (*PayloadSignedPeerIds) Descriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{1}
}

func (x *PayloadSignedPeerIds) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *PayloadSignedPeerIds) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         Error                  `protobuf:"varint,1,opt,name=error,proto3,enum=anyHandshake.Error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{2}
}

func (x *Ack) GetError() Error {
	if x != nil {
		return x.Error
	}
	return Error_Null
}

type Proto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proto         ProtoType              `protobuf:"varint,1,opt,name=proto,proto3,enum=anyHandshake.ProtoType" json:"proto,omitempty"`
	Encodings     []Encoding             `protobuf:"varint,2,rep,packed,name=encodings,proto3,enum=anyHandshake.Encoding" json:"encodings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proto) Reset() {
	*x = Proto{}
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proto) ProtoMessage() {}

func (x *Proto) ProtoReflect() protoreflect.Message {
	mi := &file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proto.ProtoReflect.Descriptor instead.
func (*Proto) Descriptor() ([]byte, []int) {
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP(), []int{3}
}

func (x *Proto) GetProto() ProtoType {
	if x != nil {
		return x.Proto
	}
	return ProtoType_DRPC
}

func (x *Proto) GetEncodings() []Encoding {
	if x != nil {
		return x.Encodings
	}
	return nil
}

var File_net_secureservice_handshake_handshakeproto_protos_handshake_proto protoreflect.FileDescriptor

const file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDesc = "" +
	"\n" +
	"Anet/secureservice/handshake/handshakeproto/protos/handshake.proto\x12\fanyHandshake\"\x9a\x01\n" +
	"\vCredentials\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.anyHandshake.CredentialsTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12\x18\n" +
	"\aversion\x18\x03 \x01(\rR\aversion\x12$\n" +
	"\rclientVersion\x18\x04 \x01(\tR\rclientVersion\"F\n" +
	"\x14PayloadSignedPeerIds\x12\x1a\n" +
	"\bidentity\x18\x01 \x01(\fR\bidentity\x12\x12\n" +
	"\x04sign\x18\x02 \x01(\fR\x04sign\"0\n" +
	"\x03Ack\x12)\n" +
	"\x05error\x18\x01 \x01(\x0e2\x13.anyHandshake.ErrorR\x05error\"l\n" +
	"\x05Proto\x12-\n" +
	"\x05proto\x18\x01 \x01(\x0e2\x17.anyHandshake.ProtoTypeR\x05proto\x124\n" +
	"\tencodings\x18\x02 \x03(\x0e2\x16.anyHandshake.EncodingR\tencodings*4\n" +
	"\x0fCredentialsType\x12\x0e\n" +
	"\n" +
	"SkipVerify\x10\x00\x12\x11\n" +
	"\rSignedPeerIds\x10\x01*\xb0\x01\n" +
	"\x05Error\x12\b\n" +
	"\x04Null\x10\x00\x12\x0e\n" +
	"\n" +
	"Unexpected\x10\x01\x12\x16\n" +
	"\x12InvalidCredentials\x10\x02\x12\x15\n" +
	"\x11UnexpectedPayload\x10\x03\x12\x18\n" +
	"\x14SkipVerifyNotAllowed\x10\x04\x12\x14\n" +
	"\x10DeadlineExceeded\x10\x05\x12\x17\n" +
	"\x13IncompatibleVersion\x10\x06\x12\x15\n" +
	"\x11IncompatibleProto\x10\a*\x15\n" +
	"\tProtoType\x12\b\n" +
	"\x04DRPC\x10\x00* \n" +
	"\bEncoding\x12\b\n" +
	"\x04None\x10\x00\x12\n" +
	"\n" +
	"\x06Snappy\x10\x01B,Z*net/secureservice/handshake/handshakeprotob\x06proto3"

var (
	file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescOnce sync.Once
	file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescData []byte
)

func file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescGZIP() []byte {
	file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescOnce.Do(func() {
		file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDesc), len(file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDesc)))
	})
	return file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDescData
}

var file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_goTypes = []any{
	(CredentialsType)(0),         // 0: anyHandshake.CredentialsType
	(Error)(0),                   // 1: anyHandshake.Error
	(ProtoType)(0),               // 2: anyHandshake.ProtoType
	(Encoding)(0),                // 3: anyHandshake.Encoding
	(*Credentials)(nil),          // 4: anyHandshake.Credentials
	(*PayloadSignedPeerIds)(nil), // 5: anyHandshake.PayloadSignedPeerIds
	(*Ack)(nil),                  // 6: anyHandshake.Ack
	(*Proto)(nil),                // 7: anyHandshake.Proto
}
var file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_depIdxs = []int32{
	0, // 0: anyHandshake.Credentials.type:type_name -> anyHandshake.CredentialsType
	1, // 1: anyHandshake.Ack.error:type_name -> anyHandshake.Error
	2, // 2: anyHandshake.Proto.proto:type_name -> anyHandshake.ProtoType
	3, // 3: anyHandshake.Proto.encodings:type_name -> anyHandshake.Encoding
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_init() }
func file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_init() {
	if File_net_secureservice_handshake_handshakeproto_protos_handshake_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDesc), len(file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_goTypes,
		DependencyIndexes: file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_depIdxs,
		EnumInfos:         file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_enumTypes,
		MessageInfos:      file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_msgTypes,
	}.Build()
	File_net_secureservice_handshake_handshakeproto_protos_handshake_proto = out.File
	file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_goTypes = nil
	file_net_secureservice_handshake_handshakeproto_protos_handshake_proto_depIdxs = nil
}
