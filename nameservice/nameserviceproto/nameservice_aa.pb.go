// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: nameservice/nameserviceproto/protos/nameservice_aa.proto

package nameserviceproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationState int32

const (
	OperationState_OpUnknown         OperationState = 0
	OperationState_Pending           OperationState = 1
	OperationState_PendingOrNotFound OperationState = 2
	OperationState_Completed         OperationState = 3
	OperationState_Error             OperationState = 4
)

// Enum value maps for OperationState.
var (
	OperationState_name = map[int32]string{
		0: "OpUnknown",
		1: "Pending",
		2: "PendingOrNotFound",
		3: "Completed",
		4: "Error",
	}
	OperationState_value = map[string]int32{
		"OpUnknown":         0,
		"Pending":           1,
		"PendingOrNotFound": 2,
		"Completed":         3,
		"Error":             4,
	}
)

func (x OperationState) Enum() *OperationState {
	p := new(OperationState)
	*p = x
	return p
}

func (x OperationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationState) Descriptor() protoreflect.EnumDescriptor {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_enumTypes[0].Descriptor()
}

func (OperationState) Type() protoreflect.EnumType {
	return &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_enumTypes[0]
}

func (x OperationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationState.Descriptor instead.
func (OperationState) EnumDescriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{0}
}

type UserAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An Ethereum address that owns that account
	OwnerEthAddress string `protobuf:"bytes,1,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// This smart contract really controls all names
	// you can ask .owner() method to get 'ownerEthAddress'
	OwnerSmartContracWalletAddress string `protobuf:"bytes,2,opt,name=ownerSmartContracWalletAddress,proto3" json:"ownerSmartContracWalletAddress,omitempty"`
	// The ownerSmartContracWalletAddress field is calculated automatically
	// from ownerEthAddress even if SCW is not deployed yet
	// SCW is deployed automatically after first operation
	OwnerSmartContracWalletDeployed bool `protobuf:"varint,3,opt,name=ownerSmartContracWalletDeployed,proto3" json:"ownerSmartContracWalletDeployed,omitempty"`
	// Number of names that the user can buy. We will mint him tokens that he can use to buy names
	// (one token per name)
	NamesCountLeft uint64 `protobuf:"varint,4,opt,name=namesCountLeft,proto3" json:"namesCountLeft,omitempty"`
	// Number of gas operations: update name, add new data, etc
	OperationsCountLeft uint64 `protobuf:"varint,5,opt,name=operationsCountLeft,proto3" json:"operationsCountLeft,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UserAccount) Reset() {
	*x = UserAccount{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccount) ProtoMessage() {}

func (x *UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccount.ProtoReflect.Descriptor instead.
func (*UserAccount) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{0}
}

func (x *UserAccount) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *UserAccount) GetOwnerSmartContracWalletAddress() string {
	if x != nil {
		return x.OwnerSmartContracWalletAddress
	}
	return ""
}

func (x *UserAccount) GetOwnerSmartContracWalletDeployed() bool {
	if x != nil {
		return x.OwnerSmartContracWalletDeployed
	}
	return false
}

func (x *UserAccount) GetNamesCountLeft() uint64 {
	if x != nil {
		return x.NamesCountLeft
	}
	return 0
}

func (x *UserAccount) GetOperationsCountLeft() uint64 {
	if x != nil {
		return x.OperationsCountLeft
	}
	return 0
}

type AdminFundUserAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An Ethereum address that owns that name
	OwnerEthAddress string `protobuf:"bytes,1,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// Number of names that user can buy. We will mint him tokens that he can use to buy names
	// (one token per name)
	NamesCount    uint64 `protobuf:"varint,2,opt,name=namesCount,proto3" json:"namesCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminFundUserAccountRequest) Reset() {
	*x = AdminFundUserAccountRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminFundUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFundUserAccountRequest) ProtoMessage() {}

func (x *AdminFundUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFundUserAccountRequest.ProtoReflect.Descriptor instead.
func (*AdminFundUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{1}
}

func (x *AdminFundUserAccountRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *AdminFundUserAccountRequest) GetNamesCount() uint64 {
	if x != nil {
		return x.NamesCount
	}
	return 0
}

type AdminFundUserAccountRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AdminFundUserAccountRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// payload signed by Admin of this service
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminFundUserAccountRequestSigned) Reset() {
	*x = AdminFundUserAccountRequestSigned{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminFundUserAccountRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFundUserAccountRequestSigned) ProtoMessage() {}

func (x *AdminFundUserAccountRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFundUserAccountRequestSigned.ProtoReflect.Descriptor instead.
func (*AdminFundUserAccountRequestSigned) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{2}
}

func (x *AdminFundUserAccountRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AdminFundUserAccountRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AdminFundGasOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An Ethereum address that owns that name
	OwnerEthAddress string `protobuf:"bytes,1,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	OwnerAnyID      string `protobuf:"bytes,2,opt,name=ownerAnyID,proto3" json:"ownerAnyID,omitempty"`
	// Number of gas operations: update name, add new data, etc
	OperationsCount uint64 `protobuf:"varint,3,opt,name=operationsCount,proto3" json:"operationsCount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AdminFundGasOperationsRequest) Reset() {
	*x = AdminFundGasOperationsRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminFundGasOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFundGasOperationsRequest) ProtoMessage() {}

func (x *AdminFundGasOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFundGasOperationsRequest.ProtoReflect.Descriptor instead.
func (*AdminFundGasOperationsRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{3}
}

func (x *AdminFundGasOperationsRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *AdminFundGasOperationsRequest) GetOwnerAnyID() string {
	if x != nil {
		return x.OwnerAnyID
	}
	return ""
}

func (x *AdminFundGasOperationsRequest) GetOperationsCount() uint64 {
	if x != nil {
		return x.OperationsCount
	}
	return 0
}

type AdminFundGasOperationsRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AdminFundGasOperationsRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// payload signed by Admin of this service
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminFundGasOperationsRequestSigned) Reset() {
	*x = AdminFundGasOperationsRequestSigned{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminFundGasOperationsRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFundGasOperationsRequestSigned) ProtoMessage() {}

func (x *AdminFundGasOperationsRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFundGasOperationsRequestSigned.ProtoReflect.Descriptor instead.
func (*AdminFundGasOperationsRequestSigned) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{4}
}

func (x *AdminFundGasOperationsRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AdminFundGasOperationsRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// no signature required here
type GetUserAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An Ethereum address that owns that account
	OwnerEthAddress string `protobuf:"bytes,1,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetUserAccountRequest) Reset() {
	*x = GetUserAccountRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountRequest) ProtoMessage() {}

func (x *GetUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserAccountRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

type GetDataNameRegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Context       []byte                 `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataNameRegisterResponse) Reset() {
	*x = GetDataNameRegisterResponse{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataNameRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataNameRegisterResponse) ProtoMessage() {}

func (x *GetDataNameRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataNameRegisterResponse.ProtoReflect.Descriptor instead.
func (*GetDataNameRegisterResponse) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{6}
}

func (x *GetDataNameRegisterResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDataNameRegisterResponse) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

type CreateUserOperationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Data  []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// "data" signed with Ethereum private key
	SignedData      []byte `protobuf:"bytes,2,opt,name=signedData,proto3" json:"signedData,omitempty"`
	Context         []byte `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	OwnerEthAddress string `protobuf:"bytes,4,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyID string `protobuf:"bytes,5,opt,name=ownerAnyID,proto3" json:"ownerAnyID,omitempty"`
	// all operations currently are towards single name, please specify it
	// we can use it for caching, etc purps.
	FullName      string `protobuf:"bytes,6,opt,name=fullName,proto3" json:"fullName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserOperationRequest) Reset() {
	*x = CreateUserOperationRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserOperationRequest) ProtoMessage() {}

func (x *CreateUserOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserOperationRequest.ProtoReflect.Descriptor instead.
func (*CreateUserOperationRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUserOperationRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserOperationRequest) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

func (x *CreateUserOperationRequest) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CreateUserOperationRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *CreateUserOperationRequest) GetOwnerAnyID() string {
	if x != nil {
		return x.OwnerAnyID
	}
	return ""
}

func (x *CreateUserOperationRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type CreateUserOperationRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CreateUserOperationRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// payload signed with Anytype identity
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserOperationRequestSigned) Reset() {
	*x = CreateUserOperationRequestSigned{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserOperationRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserOperationRequestSigned) ProtoMessage() {}

func (x *CreateUserOperationRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserOperationRequestSigned.ProtoReflect.Descriptor instead.
func (*CreateUserOperationRequestSigned) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserOperationRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CreateUserOperationRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type NameRegisterRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FullName string                 `protobuf:"bytes,1,opt,name=fullName,proto3" json:"fullName,omitempty"`
	// A content hash attached to this name
	// This should not be empty!
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyAddress string `protobuf:"bytes,2,opt,name=ownerAnyAddress,proto3" json:"ownerAnyAddress,omitempty"`
	// An Ethereum address that owns that name
	OwnerEthAddress string `protobuf:"bytes,3,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// if false -> name ownership will belong to ownerEthAddress
	// if true -> name ownership will belong to SCW of ownerEthAddress (AccountAbstraction)
	RegisterToSmartContractWallet bool `protobuf:"varint,4,opt,name=registerToSmartContractWallet,proto3" json:"registerToSmartContractWallet,omitempty"`
	// How many months to register the name for
	RegisterPeriodMonths uint32 `protobuf:"varint,5,opt,name=registerPeriodMonths,proto3" json:"registerPeriodMonths,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NameRegisterRequest) Reset() {
	*x = NameRegisterRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRegisterRequest) ProtoMessage() {}

func (x *NameRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRegisterRequest.ProtoReflect.Descriptor instead.
func (*NameRegisterRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{9}
}

func (x *NameRegisterRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *NameRegisterRequest) GetOwnerAnyAddress() string {
	if x != nil {
		return x.OwnerAnyAddress
	}
	return ""
}

func (x *NameRegisterRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *NameRegisterRequest) GetRegisterToSmartContractWallet() bool {
	if x != nil {
		return x.RegisterToSmartContractWallet
	}
	return false
}

func (x *NameRegisterRequest) GetRegisterPeriodMonths() uint32 {
	if x != nil {
		return x.RegisterPeriodMonths
	}
	return 0
}

type NameRegisterRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NameRegisterRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// payload signed by payload.ownerEthAddress
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameRegisterRequestSigned) Reset() {
	*x = NameRegisterRequestSigned{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRegisterRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRegisterRequestSigned) ProtoMessage() {}

func (x *NameRegisterRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRegisterRequestSigned.ProtoReflect.Descriptor instead.
func (*NameRegisterRequestSigned) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{10}
}

func (x *NameRegisterRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *NameRegisterRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type NameRenewRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FullName string                 `protobuf:"bytes,1,opt,name=fullName,proto3" json:"fullName,omitempty"`
	// A content hash attached to this name
	// This should not be empty!
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyAddress string `protobuf:"bytes,2,opt,name=ownerAnyAddress,proto3" json:"ownerAnyAddress,omitempty"`
	// An Ethereum address that owns that name
	OwnerEthAddress string `protobuf:"bytes,3,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// if false -> name ownership will belong to ownerEthAddress
	// if true -> name ownership will belong to SCW of ownerEthAddress (AccountAbstraction)
	RenewToSmartContractWallet bool `protobuf:"varint,4,opt,name=renewToSmartContractWallet,proto3" json:"renewToSmartContractWallet,omitempty"`
	// How many months to register the name for
	RenewPeriodMonths uint32 `protobuf:"varint,5,opt,name=renewPeriodMonths,proto3" json:"renewPeriodMonths,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NameRenewRequest) Reset() {
	*x = NameRenewRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRenewRequest) ProtoMessage() {}

func (x *NameRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRenewRequest.ProtoReflect.Descriptor instead.
func (*NameRenewRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{11}
}

func (x *NameRenewRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *NameRenewRequest) GetOwnerAnyAddress() string {
	if x != nil {
		return x.OwnerAnyAddress
	}
	return ""
}

func (x *NameRenewRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *NameRenewRequest) GetRenewToSmartContractWallet() bool {
	if x != nil {
		return x.RenewToSmartContractWallet
	}
	return false
}

func (x *NameRenewRequest) GetRenewPeriodMonths() uint32 {
	if x != nil {
		return x.RenewPeriodMonths
	}
	return 0
}

type NameRenewRequestSigned struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NameRenewRequest struct
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// payload signed by payload.ownerEthAddress
	Signature     []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameRenewRequestSigned) Reset() {
	*x = NameRenewRequestSigned{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRenewRequestSigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRenewRequestSigned) ProtoMessage() {}

func (x *NameRenewRequestSigned) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRenewRequestSigned.ProtoReflect.Descriptor instead.
func (*NameRenewRequestSigned) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{12}
}

func (x *NameRenewRequestSigned) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *NameRenewRequestSigned) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type NameRegisterForSpaceRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FullName string                 `protobuf:"bytes,1,opt,name=fullName,proto3" json:"fullName,omitempty"`
	// A content hash attached to this name
	// This should not be empty!
	// in the following format: "A5k2d9sFZw84yisTxRnz2bPRd1YPfVfhxqymZ6yESprFTG65"
	// you can get it with Account().SignKey.GetPublic().Account()
	OwnerAnyAddress string `protobuf:"bytes,2,opt,name=ownerAnyAddress,proto3" json:"ownerAnyAddress,omitempty"`
	// An Ethereum address that owns that name
	OwnerEthAddress string `protobuf:"bytes,3,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// A SpaceID attached to this name
	SpaceId string `protobuf:"bytes,4,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// How many months to register the name for
	RegisterPeriodMonths uint32 `protobuf:"varint,5,opt,name=registerPeriodMonths,proto3" json:"registerPeriodMonths,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NameRegisterForSpaceRequest) Reset() {
	*x = NameRegisterForSpaceRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameRegisterForSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRegisterForSpaceRequest) ProtoMessage() {}

func (x *NameRegisterForSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRegisterForSpaceRequest.ProtoReflect.Descriptor instead.
func (*NameRegisterForSpaceRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{13}
}

func (x *NameRegisterForSpaceRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *NameRegisterForSpaceRequest) GetOwnerAnyAddress() string {
	if x != nil {
		return x.OwnerAnyAddress
	}
	return ""
}

func (x *NameRegisterForSpaceRequest) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *NameRegisterForSpaceRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *NameRegisterForSpaceRequest) GetRegisterPeriodMonths() uint32 {
	if x != nil {
		return x.RegisterPeriodMonths
	}
	return 0
}

type GetOperationStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationId   string                 `protobuf:"bytes,1,opt,name=operationId,proto3" json:"operationId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperationStatusRequest) Reset() {
	*x = GetOperationStatusRequest{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationStatusRequest) ProtoMessage() {}

func (x *GetOperationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetOperationStatusRequest) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{14}
}

func (x *GetOperationStatusRequest) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type OperationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OperationId    string                 `protobuf:"bytes,1,opt,name=operationId,proto3" json:"operationId,omitempty"`
	OperationState OperationState         `protobuf:"varint,2,opt,name=operationState,proto3,enum=OperationState" json:"operationState,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OperationResponse) Reset() {
	*x = OperationResponse{}
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponse) ProtoMessage() {}

func (x *OperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponse.ProtoReflect.Descriptor instead.
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP(), []int{15}
}

func (x *OperationResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *OperationResponse) GetOperationState() OperationState {
	if x != nil {
		return x.OperationState
	}
	return OperationState_OpUnknown
}

var File_nameservice_nameserviceproto_protos_nameservice_aa_proto protoreflect.FileDescriptor

const file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDesc = "" +
	"\n" +
	"8nameservice/nameserviceproto/protos/nameservice_aa.proto\"\xa3\x02\n" +
	"\vUserAccount\x12(\n" +
	"\x0fownerEthAddress\x18\x01 \x01(\tR\x0fownerEthAddress\x12F\n" +
	"\x1eownerSmartContracWalletAddress\x18\x02 \x01(\tR\x1eownerSmartContracWalletAddress\x12H\n" +
	"\x1fownerSmartContracWalletDeployed\x18\x03 \x01(\bR\x1fownerSmartContracWalletDeployed\x12&\n" +
	"\x0enamesCountLeft\x18\x04 \x01(\x04R\x0enamesCountLeft\x120\n" +
	"\x13operationsCountLeft\x18\x05 \x01(\x04R\x13operationsCountLeft\"g\n" +
	"\x1bAdminFundUserAccountRequest\x12(\n" +
	"\x0fownerEthAddress\x18\x01 \x01(\tR\x0fownerEthAddress\x12\x1e\n" +
	"\n" +
	"namesCount\x18\x02 \x01(\x04R\n" +
	"namesCount\"[\n" +
	"!AdminFundUserAccountRequestSigned\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"\x93\x01\n" +
	"\x1dAdminFundGasOperationsRequest\x12(\n" +
	"\x0fownerEthAddress\x18\x01 \x01(\tR\x0fownerEthAddress\x12\x1e\n" +
	"\n" +
	"ownerAnyID\x18\x02 \x01(\tR\n" +
	"ownerAnyID\x12(\n" +
	"\x0foperationsCount\x18\x03 \x01(\x04R\x0foperationsCount\"]\n" +
	"#AdminFundGasOperationsRequestSigned\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"A\n" +
	"\x15GetUserAccountRequest\x12(\n" +
	"\x0fownerEthAddress\x18\x01 \x01(\tR\x0fownerEthAddress\"K\n" +
	"\x1bGetDataNameRegisterResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x18\n" +
	"\acontext\x18\x02 \x01(\fR\acontext\"\xd0\x01\n" +
	"\x1aCreateUserOperationRequest\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1e\n" +
	"\n" +
	"signedData\x18\x02 \x01(\fR\n" +
	"signedData\x12\x18\n" +
	"\acontext\x18\x03 \x01(\fR\acontext\x12(\n" +
	"\x0fownerEthAddress\x18\x04 \x01(\tR\x0fownerEthAddress\x12\x1e\n" +
	"\n" +
	"ownerAnyID\x18\x05 \x01(\tR\n" +
	"ownerAnyID\x12\x1a\n" +
	"\bfullName\x18\x06 \x01(\tR\bfullName\"Z\n" +
	" CreateUserOperationRequestSigned\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"\xff\x01\n" +
	"\x13NameRegisterRequest\x12\x1a\n" +
	"\bfullName\x18\x01 \x01(\tR\bfullName\x12(\n" +
	"\x0fownerAnyAddress\x18\x02 \x01(\tR\x0fownerAnyAddress\x12(\n" +
	"\x0fownerEthAddress\x18\x03 \x01(\tR\x0fownerEthAddress\x12D\n" +
	"\x1dregisterToSmartContractWallet\x18\x04 \x01(\bR\x1dregisterToSmartContractWallet\x122\n" +
	"\x14registerPeriodMonths\x18\x05 \x01(\rR\x14registerPeriodMonths\"S\n" +
	"\x19NameRegisterRequestSigned\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"\xf0\x01\n" +
	"\x10NameRenewRequest\x12\x1a\n" +
	"\bfullName\x18\x01 \x01(\tR\bfullName\x12(\n" +
	"\x0fownerAnyAddress\x18\x02 \x01(\tR\x0fownerAnyAddress\x12(\n" +
	"\x0fownerEthAddress\x18\x03 \x01(\tR\x0fownerEthAddress\x12>\n" +
	"\x1arenewToSmartContractWallet\x18\x04 \x01(\bR\x1arenewToSmartContractWallet\x12,\n" +
	"\x11renewPeriodMonths\x18\x05 \x01(\rR\x11renewPeriodMonths\"P\n" +
	"\x16NameRenewRequestSigned\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"\xdb\x01\n" +
	"\x1bNameRegisterForSpaceRequest\x12\x1a\n" +
	"\bfullName\x18\x01 \x01(\tR\bfullName\x12(\n" +
	"\x0fownerAnyAddress\x18\x02 \x01(\tR\x0fownerAnyAddress\x12(\n" +
	"\x0fownerEthAddress\x18\x03 \x01(\tR\x0fownerEthAddress\x12\x18\n" +
	"\aspaceId\x18\x04 \x01(\tR\aspaceId\x122\n" +
	"\x14registerPeriodMonths\x18\x05 \x01(\rR\x14registerPeriodMonths\"=\n" +
	"\x19GetOperationStatusRequest\x12 \n" +
	"\voperationId\x18\x01 \x01(\tR\voperationId\"n\n" +
	"\x11OperationResponse\x12 \n" +
	"\voperationId\x18\x01 \x01(\tR\voperationId\x127\n" +
	"\x0eoperationState\x18\x02 \x01(\x0e2\x0f.OperationStateR\x0eoperationState*]\n" +
	"\x0eOperationState\x12\r\n" +
	"\tOpUnknown\x10\x00\x12\v\n" +
	"\aPending\x10\x01\x12\x15\n" +
	"\x11PendingOrNotFound\x10\x02\x12\r\n" +
	"\tCompleted\x10\x03\x12\t\n" +
	"\x05Error\x10\x042\xb7\x04\n" +
	"\x17AnynsAccountAbstraction\x12@\n" +
	"\fGetOperation\x12\x1a.GetOperationStatusRequest\x1a\x12.OperationResponse\"\x00\x12P\n" +
	"\x14AdminFundUserAccount\x12\".AdminFundUserAccountRequestSigned\x1a\x12.OperationResponse\"\x00\x12T\n" +
	"\x16AdminFundGasOperations\x12$.AdminFundGasOperationsRequestSigned\x1a\x12.OperationResponse\"\x00\x128\n" +
	"\x0eGetUserAccount\x12\x16.GetUserAccountRequest\x1a\f.UserAccount\"\x00\x12K\n" +
	"\x13GetDataNameRegister\x12\x14.NameRegisterRequest\x1a\x1c.GetDataNameRegisterResponse\"\x00\x12[\n" +
	"\x1bGetDataNameRegisterForSpace\x12\x1c.NameRegisterForSpaceRequest\x1a\x1c.GetDataNameRegisterResponse\"\x00\x12N\n" +
	"\x13CreateUserOperation\x12!.CreateUserOperationRequestSigned\x1a\x12.OperationResponse\"\x00B\x1eZ\x1cnameservice/nameserviceprotob\x06proto3"

var (
	file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescOnce sync.Once
	file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescData []byte
)

func file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescGZIP() []byte {
	file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescOnce.Do(func() {
		file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDesc), len(file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDesc)))
	})
	return file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDescData
}

var file_nameservice_nameserviceproto_protos_nameservice_aa_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_nameservice_nameserviceproto_protos_nameservice_aa_proto_goTypes = []any{
	(OperationState)(0),                         // 0: OperationState
	(*UserAccount)(nil),                         // 1: UserAccount
	(*AdminFundUserAccountRequest)(nil),         // 2: AdminFundUserAccountRequest
	(*AdminFundUserAccountRequestSigned)(nil),   // 3: AdminFundUserAccountRequestSigned
	(*AdminFundGasOperationsRequest)(nil),       // 4: AdminFundGasOperationsRequest
	(*AdminFundGasOperationsRequestSigned)(nil), // 5: AdminFundGasOperationsRequestSigned
	(*GetUserAccountRequest)(nil),               // 6: GetUserAccountRequest
	(*GetDataNameRegisterResponse)(nil),         // 7: GetDataNameRegisterResponse
	(*CreateUserOperationRequest)(nil),          // 8: CreateUserOperationRequest
	(*CreateUserOperationRequestSigned)(nil),    // 9: CreateUserOperationRequestSigned
	(*NameRegisterRequest)(nil),                 // 10: NameRegisterRequest
	(*NameRegisterRequestSigned)(nil),           // 11: NameRegisterRequestSigned
	(*NameRenewRequest)(nil),                    // 12: NameRenewRequest
	(*NameRenewRequestSigned)(nil),              // 13: NameRenewRequestSigned
	(*NameRegisterForSpaceRequest)(nil),         // 14: NameRegisterForSpaceRequest
	(*GetOperationStatusRequest)(nil),           // 15: GetOperationStatusRequest
	(*OperationResponse)(nil),                   // 16: OperationResponse
}
var file_nameservice_nameserviceproto_protos_nameservice_aa_proto_depIdxs = []int32{
	0,  // 0: OperationResponse.operationState:type_name -> OperationState
	15, // 1: AnynsAccountAbstraction.GetOperation:input_type -> GetOperationStatusRequest
	3,  // 2: AnynsAccountAbstraction.AdminFundUserAccount:input_type -> AdminFundUserAccountRequestSigned
	5,  // 3: AnynsAccountAbstraction.AdminFundGasOperations:input_type -> AdminFundGasOperationsRequestSigned
	6,  // 4: AnynsAccountAbstraction.GetUserAccount:input_type -> GetUserAccountRequest
	10, // 5: AnynsAccountAbstraction.GetDataNameRegister:input_type -> NameRegisterRequest
	14, // 6: AnynsAccountAbstraction.GetDataNameRegisterForSpace:input_type -> NameRegisterForSpaceRequest
	9,  // 7: AnynsAccountAbstraction.CreateUserOperation:input_type -> CreateUserOperationRequestSigned
	16, // 8: AnynsAccountAbstraction.GetOperation:output_type -> OperationResponse
	16, // 9: AnynsAccountAbstraction.AdminFundUserAccount:output_type -> OperationResponse
	16, // 10: AnynsAccountAbstraction.AdminFundGasOperations:output_type -> OperationResponse
	1,  // 11: AnynsAccountAbstraction.GetUserAccount:output_type -> UserAccount
	7,  // 12: AnynsAccountAbstraction.GetDataNameRegister:output_type -> GetDataNameRegisterResponse
	7,  // 13: AnynsAccountAbstraction.GetDataNameRegisterForSpace:output_type -> GetDataNameRegisterResponse
	16, // 14: AnynsAccountAbstraction.CreateUserOperation:output_type -> OperationResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_nameservice_nameserviceproto_protos_nameservice_aa_proto_init() }
func file_nameservice_nameserviceproto_protos_nameservice_aa_proto_init() {
	if File_nameservice_nameserviceproto_protos_nameservice_aa_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDesc), len(file_nameservice_nameserviceproto_protos_nameservice_aa_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nameservice_nameserviceproto_protos_nameservice_aa_proto_goTypes,
		DependencyIndexes: file_nameservice_nameserviceproto_protos_nameservice_aa_proto_depIdxs,
		EnumInfos:         file_nameservice_nameserviceproto_protos_nameservice_aa_proto_enumTypes,
		MessageInfos:      file_nameservice_nameserviceproto_protos_nameservice_aa_proto_msgTypes,
	}.Build()
	File_nameservice_nameserviceproto_protos_nameservice_aa_proto = out.File
	file_nameservice_nameserviceproto_protos_nameservice_aa_proto_goTypes = nil
	file_nameservice_nameserviceproto_protos_nameservice_aa_proto_depIdxs = nil
}
